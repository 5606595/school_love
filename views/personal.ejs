<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="maximum-scale=1.0, initial-scale=1.0, width=device-width, user-scalable=no">
    <title>Document</title>
    <style>
        html, body {
            margin: 0;
            padding: 0;
            background: #f5f5f9;
        }
        h2 {
            color: #108ee9;
            text-align: center;
            font-size: 32px;
            margin-bottom: 15px;
        }
        h6 {
            color: #9e9e9f;
            text-align: center;
            font-size: 10px;
            margin-top: 0;
            margin-bottom: 10px;
        }
        .form .container {
            background: white;
            border-top: 1px solid #DDD;
            border-bottom: 1px solid #DDD;
            padding-left: 15px;
            margin: 20px 0;
        }
        .form .input {
            height: 45px;
            line-height: 45px;
            font-size: 14px;
            border-bottom: 1px solid #DDD;
        }
        .form .input:nth-last-of-type(1) {
            border-bottom: none;
        }
        .form .input label {
            margin-right: 4%;
        }
        .form .input input {
            height: 45px;
            line-height: 45px;
            font-size: 16px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;;
            outline: none;
            width: 80%;
        }
        .form .input .info {
            float: right;
            margin-right: 10px;
            color: #AAA;
            width: 60%;
            font-size: 12px;
        }
        .form .input .info span {
            color: #AAA;
            max-width: 80%;
            font-size: 12px;
            display: block;
            float: right;
            text-overflow: ellipsis;
            overflow: hidden;
            text-align: right;
            white-space: nowrap;
        }
        .form h3 {
            margin: 10px 15px;
            font-size: 16px;
            font-weight: normal;
        }
        .fixed .info {
            margin-right: 31px!important;
        }
        @font-face {
            font-family: 'iconfont';
            src: url('/fonts/iconfont.eot?t=1476671464');
            src: url('/fonts/iconfont.eot?t=1476671464#iefix') format('embedded-opentype'),
            url('/fonts/iconfont.woff?t=1476671464') format('woff'),
            url('/fonts/iconfont.ttf?t=1476671464') format('truetype'),
            url('/fonts/iconfont.svg?t=1476671464') format('svg');
        }
        .iconfont {
            font-family: 'iconfont' !important;
            font-size:16px;
            font-style:normal;
            -webkit-font-smoothing: antialiased;
            -webkit-text-stroke-width: 0.2px;
            -moz-osx-font-smoothing: grayscale;
        }
        .icon-right {
            float: right;
        }
        .icon-right:before {
            content: '\e600';
            margin: 0 0 0 5px;
            font-size: 14px;
        }
        .icon-left:before {
            content: '\e601';
        }
        .set {
            position: fixed;
            width: 90%;
            height: 360px;
            background: white;
            z-index: 20;
            top: 50%;
            left: 50%;
            -webkit-border-radius: 2px;
            -moz-border-radius: 2px;
            border-radius: 2px;
            -webkit-box-shadow: 2px 2px 10px black;
            -moz-box-shadow: 2px 2px 10px black;
            box-shadow: 2px 2px 10px black;
            -webkit-transform: translate(-50%, -50%);
            -moz-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            -o-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
            -webkit-animation: out 0.1s linear;
            -o-animation: out 0.1s linear;
            animation: out 0.1s linear;
        }
        .set h3 {
            color: #108ee9;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;;
            font-size: 16px;
            font-weight: normal;
            margin: 0;
            height: 60px;
            line-height: 60px;
            padding: 0 20px;
            border-bottom: 3px solid #108ee9;
        }
        .set .select {
            height: 240px;
            position: relative;
            overflow: hidden;
        }
        .set .select .option div {
            visibility: hidden;
            width: 100%;
            height: 80px;
            margin: 0;
            color: #ccc;
            line-height: 80px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;;
            text-align: center;
        }
        .set .select .option .display {
            visibility: visible;
        }
        .set .select .option .highlight {
            color: #30aef9;
        }
        .set .select .border {
            width: 60%;
            height: 80px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;;
            border-top: 1px solid #30aef9;
            border-bottom: 1px solid #30aef9;
            position: absolute;
            top: 50%;
            left: 50%;
            -webkit-transform: translate(-50%, -50%);
            -moz-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            -o-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }
        .set .bottom {
            border-top: 1px solid #EEE;
            overflow: hidden;
            height: 60px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;;
        }
        .set .bottom button {
            width: 50%;
            height: 60px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;;
            border: none;
            background: none;
            margin: 0;
            float: left;
            outline: none;
            padding: 10px;
        }
        .set .bottom button:nth-of-type(1) {
            border-right: 1px solid #EEE;
        }
        #cover {
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 19;
            background: rgba(0, 0, 0, 0.6);
            -webkit-animation: out 0.1s linear;
            -o-animation: out 0.1s linear;
            animation: out 0.1s linear;
        }
        #homeset {
            position: fixed;
            bottom: 0;
            height: 295px;
            width: 100%;
            z-index: 20;
            background: white;
            -webkit-animation: up 0.1s linear;
            -o-animation: up 0.1s linear;
            animation: up 0.1s linear;
        }
        #homeset header {
            height: 50px;
            width: 100%;
            line-height: 50px;
            text-align: center;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            border-bottom: 1px solid #DDD;
            padding: 0 10px;
        }
        #homeset header .cancel {
            float: left;
            color: #108ee9;
        }
        #homeset header .confirm {
            float: right;
            color: #108ee9;
        }
        #homeset .select {
            height: 245px;
            width: 100%;
            overflow: hidden;
        }
        #homeset .select > div {
            width: 33.33333333333%;
            font-size: 14px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            float: left;
        }
        #homeset .select > div > div {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            text-align: center;
            height: 35px;
            line-height: 35px;
            -ms-text-overflow: ellipsis;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            font-weight: bold;
            visibility: hidden;
        }
        #homeset .select > div > .side1 {
            color: #AAA;
        }
        #homeset .select > div > .side2 {
            color: #CCC;
        }
        #homeset .select > div > .side3 {
            color: #DDD;
        }
        #homeset .select > div > .display {
            visibility: visible;
        }
        .disappear {
            -webkit-animation: dis 0.1s linear!important;
            -o-animation: dis 0.1s linear!important;
            animation: dis 0.1s linear!important;
        }
        .downele {
            -webkit-animation: down 0.1s linear!important;
            -o-animation: down 0.1s linear!important;
            animation: down 0.1s linear!important;
        }
        #extra {
            height: 100%;
            position: fixed;
            left: 0;
            top: 0;
            z-index: 20;
            width: 100%;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background: #f5f5f9;
            -webkit-animation: up 0.1s linear;
            -o-animation:  up 0.1s linear;
            animation: up 0.1s linear;
        }
        #extra  header {
            height: 50px;
            width: 100%;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            line-height: 50px;
            background: white;
            border-bottom: 1px solid #DDD;
        }
        #extra  header > .exit {
            color: #108ee9;
            display: inline-block;
            height: 50px;
            padding: 0 10px 0 0
        }
        #extra  header > .exit > i {
            padding: 4px 15px;
            border-right: 1px solid #EEE;
        }
        #extra  header > .save {
            float: right;
        }
        #extra  header > .save button {
            padding: 5px 30px;
            background: none;
            border: none;
            border-left: 1px solid #EEE;
            outline: none;
            color: #108ee9;
        }
        #extra  header > .save button[disabled] {
            color: #a2d5ff;
        }
        #extra  .bottom > .input {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            margin: 0px 5px;
            padding: 0 10px;
            border-bottom: 1px solid #108ee9;
            height: 40px;
            margin-top: 0;
            position: relative;
        }
        #extra  .bottom > .input input {
            display: block;
            width: 100%;
            padding-top: 15px;
            padding-right: 30px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background: none;
            border: none;
            outline: none;
            font-size: 16px;
        }
        #extra  .bottom > .input > .exp {
            position: absolute;
            right: 5px;
            bottom: 2px;
            color: #CCC;
            font-size: 12px;
        }
        #extra  .bottom > .textarea {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            margin: 0px;
            padding: 10px;
            border-bottom: 1px solid #CCC;
            border-top: 1px solid #CCC;
            background: white;
            height: 200px;
            margin-top: 0;
            position: relative;
        }
        #extra  .bottom > .textarea textarea {
            display: block;
            width: 100%;
            height: 100%;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background: none;
            border: none;
            outline: none;
            font-size: 16px;
        }
        #extra  .bottom > .textarea > .exp {
            position: absolute;
            right: 10px;
            bottom: 5px;
            color: #CCC;
            font-size: 14px;
        }
        #extra  .bottom > .textarea > .exp > .has {
            color: black;
        }
        #extra .two {
            margin-top: 20px;
        }
        #photodisplay {
            width: 84%;
            height: 100%;
            margin: auto;
            overflow: auto;
            position: relative;
        }
        #photodisplay img {
            width: 100%;
            /*position: absolute;*/
            /*top: 50%;*/
            /*transform: translate3d(0, -50%, 0);*/
        }
        #upload {
            width: 80%;
            margin: 0 10%;
            border: 1px solid #CCC;
            background: white;
            height: 50px;
            line-height: 50px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            position: fixed;
            bottom: 10px;
            text-align: center;
        }
        #upload input {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            height: 50px;
            width: 100%;
        }
        .uploadextra {
            padding-bottom: 70px;
        }
        .uploadextra > div {
            height: 100%;
        }
        .uploadextra .bottom {
            height: calc(100% - 50px);
        }
        @keyframes out {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }
        @-webkit-keyframes out {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }
        @-o-keyframes out {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }
        @keyframes dis {
            0% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }
        @-webkit-keyframes dis {
            0% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }
        @-o-keyframes dis {
            0% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }
        @keyframes down {
            0% {
                -webkit-transform: translate3d(0, 0, 0);
                -moz-transform: translate3d(0, 0, 0);
                -ms-transform: translate3d(0, 0, 0);
                -o-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
            100% {
                -webkit-transform: translate3d(0, 100%, 0);
                -moz-transform: translate3d(0, 100%, 0);
                -ms-transform: translate3d(0, 100%, 0);
                -o-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
            }
        }
        @-webkit-keyframes down {
            0% {
                -webkit-transform: translate3d(0, 0, 0);
                -moz-transform: translate3d(0, 0, 0);
                -ms-transform: translate3d(0, 0, 0);
                -o-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
            100% {
                -webkit-transform: translate3d(0, 100%, 0);
                -moz-transform: translate3d(0, 100%, 0);
                -ms-transform: translate3d(0, 100%, 0);
                -o-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
            }
        }
        @-o-keyframes down {
            0% {
                -webkit-transform: translate3d(0, 0, 0);
                -moz-transform: translate3d(0, 0, 0);
                -ms-transform: translate3d(0, 0, 0);
                -o-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
            100% {
                -webkit-transform: translate3d(0, 100%, 0);
                -moz-transform: translate3d(0, 100%, 0);
                -ms-transform: translate3d(0, 100%, 0);
                -o-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
            }
        }
        @keyframes up {
            0% {
                -webkit-transform: translate3d(0, 100%, 0);
                -moz-transform: translate3d(0, 100%, 0);
                -ms-transform: translate3d(0, 100%, 0);
                -o-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
            }
            100% {
                -webkit-transform: translate3d(0, 0, 0);
                -moz-transform: translate3d(0, 0, 0);
                -ms-transform: translate3d(0, 0, 0);
                -o-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
        }
        @-webkit-keyframes up {
            0% {
                -webkit-transform: translate3d(0, 100%, 0);
                -moz-transform: translate3d(0, 100%, 0);
                -ms-transform: translate3d(0, 100%, 0);
                -o-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
            }
            100% {
                -webkit-transform: translate3d(0, 0, 0);
                -moz-transform: translate3d(0, 0, 0);
                -ms-transform: translate3d(0, 0, 0);
                -o-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
        }
        @-o-keyframes up {
            0% {
                -webkit-transform: translate3d(0, 100%, 0);
                -moz-transform: translate3d(0, 100%, 0);
                -ms-transform: translate3d(0, 100%, 0);
                -o-transform: translate3d(0, 100%, 0);
                transform: translate3d(0, 100%, 0);
            }
            100% {
                -webkit-transform: translate3d(0, 0, 0);
                -moz-transform: translate3d(0, 0, 0);
                -ms-transform: translate3d(0, 0, 0);
                -o-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
            }
        }
    </style>
</head>
<body>
    <h2>
        个人资料
    </h2>
    <h6>
        personal profile
    </h6>
    <div class="form">
        <div class="container">
            <div class="input fixed">
                <label for="">
                    姓名
                </label>
                <div class="info">
                    <span>夏伟</span>
                </div>
            </div>
            <div class="input fixed">
                <label for="">
                    年龄
                </label>
                <div class="info">
                    <span>20</span>
                </div>
            </div>
            <div class="input fixed">
                <label for="">
                    性别
                </label>
                <div class="info" id="gendertext">
                    <span>男</span>
                </div>
            </div>
            <div class="input change" id="height">
                <label for="">
                    身高
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="heighttext">未填写</span>
                </div>
            </div>
            <div class="input change" id="home">
                <label for="">
                    家乡
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="hometext">未填写</span>
                </div>
            </div>
            <div class="input change" id="constellation">
                <label for="">
                    星座
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="constellationtext">未填写</span>
                </div>
            </div>
            <div class="input change" id="department">
                <label for="">
                    学院
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="departmenttext">未填写</span>
                </div>
            </div>
            <div class="input change" id="grade">
                <label for="">
                    年级
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="gradetext">未填写</span>
                </div>
            </div>
            <div class="input change" id="intro">
                <label for="">
                    自我介绍
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="introtext">未填写</span>
                </div>
            </div>
            <div class="input change" id="want">
                <label for="">
                    对TA的期待
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                    <span id="wanttext">未填写</span>
                </div>
            </div>
            <div class="input change" id="photo">
                <label for="">
                    生活照
                </label>
                <div class="info">
                    <i class="iconfont icon-right"></i>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    var prefix;
    var container = document.getElementsByClassName("container")[0];
    var index = {
        "height": [" <div class=\'set\'>",
            "        <h3>填写您的身高</h3>",
            "        <div class=\'select\'>",
            "            <div class=\"option\">",
            "                <div></div>",
            "                <div>138cm</div>",
            "                <div>139cm</div>",
            "                <div>140cm</div>",
            "                <div>141cm</div>",
            "                <div>142cm</div>",
            "                <div>143cm</div>",
            "                <div>144cm</div>",
            "                <div>145cm</div>",
            "                <div>146cm</div>",
            "                <div>147cm</div>",
            "                <div>148cm</div>",
            "                <div>149cm</div>",
            "                <div>150cm</div>",
            "                <div>151cm</div>",
            "                <div>152cm</div>",
            "                <div>153cm</div>",
            "                <div>154cm</div>",
            "                <div>155cm</div>",
            "                <div>156cm</div>",
            "                <div>157cm</div>",
            "                <div>158cm</div>",
            "                <div>159cm</div>",
            "                <div>160cm</div>",
            "                <div>161cm</div>",
            "                <div>162cm</div>",
            "                <div>163cm</div>",
            "                <div>164cm</div>",
            "                <div>165cm</div>",
            "                <div>166cm</div>",
            "                <div>167cm</div>",
            "                <div>168cm</div>",
            "                <div>169cm</div>",
            "                <div>170cm</div>",
            "                <div>171cm</div>",
            "                <div>172cm</div>",
            "                <div>173cm</div>",
            "                <div>174cm</div>",
            "                <div>175cm</div>",
            "                <div>176cm</div>",
            "                <div>177cm</div>",
            "                <div>178cm</div>",
            "                <div>179cm</div>",
            "                <div>180cm</div>",
            "                <div>181cm</div>",
            "                <div>182cm</div>",
            "                <div>183cm</div>",
            "                <div>184cm</div>",
            "                <div>185cm</div>",
            "                <div>186cm</div>",
            "                <div>187cm</div>",
            "                <div>188cm</div>",
            "                <div>189cm</div>",
            "                <div>190cm</div>",
            "                <div>191cm</div>",
            "                <div>192cm</div>",
            "                <div>193cm</div>",
            "                <div>194cm</div>",
            "                <div>195cm</div>",
            "                <div>196cm</div>",
            "                <div>197cm</div>",
            "                <div>198cm</div>",
            "                <div>199cm</div>",
            "                <div>200cm</div>",
            "                <div>201cm</div>",
            "                <div>202cm</div>",
            "                <div>203cm</div>",
            "                <div>204cm</div>",
            "                <div>205cm</div>",
            "                <div>206cm</div>",
            "                <div>207cm</div>",
            "                <div>208cm</div>",
            "                <div>209cm</div>",
            "                <div>210cm</div>",
            "                <div>211cm</div>",
            "                <div>212cm</div>",
            "                <div>213cm</div>",
            "                <div>214cm</div>",
            "                <div>215cm</div>",
            "                <div>216cm</div>",
            "                <div>217cm</div>",
            "                <div>218cm</div>",
            "                <div>219cm</div>",
            "                <div>220cm</div>",
            "                <div></div>",
            "            </div>",
            "            <div class=\"border\"></div>",
            "        </div>",
            "        <div class=\'bottom\'>",
            "            <button class=\'save\'>保存</button>",
            "            <button class=\'cancel\'>取消</button>",
            "        </div>",
            "    </div>",
            "    <div id=\'cover\'></div>"].join(""),
        "home": '<div id="homeset">'+
        '        <header>'+
        '            <span class="cancel">取消</span>'+
        '            <span>选择地区</span>'+
        '            <span class="confirm">确定</span>'+
        '        </header>'+
        '        <div class="select">'+
        '            <div id="option1"></div>'+
        '            <div id="option2"></div>'+
        '            <div id="option3"></div>'+
        '        </div>'+
        '    </div>'+
        '    <div id="cover"></div>',
        "department": '<div id="extra">'+
        '        <header>'+
        '            <div class="exit">'+
        '                <i class="iconfont icon-left"></i>'+
        '            </div>'+
        '            <span>学院</span>'+
        '            <div class="save">'+
        '                <button disabled="disabled">保存</button>'+
        '            </div>'+
        '        </header>'+
        '        <div class="bottom">'+
        '            <div class="input">'+
        '                <input type="text" maxlength="30">'+
        '                <span class="exp">30</span>'+
        '            </div>'+
        '        </div>'+
        '    </div>',
        "constellation": '<div class="set">'+
        '        <h3>填写您的星座</h3>'+
        '        <div class="select">'+
        '            <div class="option">'+
        '                <div></div>'+
        '                <div>白羊座 3.21-4.19</div>'+
        '                <div>金牛座 4.20-5.20</div>'+
        '                <div>双子座 5.21-6.21</div>'+
        '                <div>巨蟹座 6.22-7.22</div>'+
        '                <div>狮子座 7.23-8.22</div>'+
        '                <div>处女座 8.23-9.22</div>'+
        '                <div>天秤座 9.23-10.23</div>'+
        '                <div>天蝎座 10.24-11.22</div>'+
        '                <div>射手座 11.23-12.21</div>'+
        '                <div>摩羯座 12.22-1.19</div>'+
        '                <div>水瓶座 1.20-2.18</div>'+
        '                <div>双鱼座 2.19-3.20</div>'+
        '                <div></div>'+
        '            </div>'+
        '            <div class="border"></div>'+
        '        </div>'+
        '        <div class="bottom">'+
        '            <button class="save">保存</button>'+
        '            <button class="cancel">取消</button>'+
        '        </div>'+
        '    </div>'+
        '    <div id="cover"></div>',
        "grade": '<div class="set">'+
        '        <h3>填写您的星座</h3>'+
        '        <div class="select">'+
        '            <div class="option">'+
        '                <div></div>'+
        '                <div>2013级</div>'+
        '                <div>2014级</div>'+
        '                <div>2015级</div>'+
        '                <div>2016级</div>'+
        '                <div></div>'+
        '            </div>'+
        '            <div class="border"></div>'+
        '        </div>'+
        '        <div class="bottom">'+
        '            <button class="save">保存</button>'+
        '            <button class="cancel">取消</button>'+
        '        </div>'+
        '    </div>'+
        '    <div id="cover"></div>',
        intro: '<div id="extra">'+
        '        <header>'+
        '            <div class="exit">'+
        '                <i class="iconfont icon-left"></i>'+
        '            </div>'+
        '            <span>自我介绍</span>'+
        '            <div class="save">'+
        '                <button disabled="disabled">保存</button>'+
        '            </div>'+
        '        </header>'+
        '        <div class="bottom two">'+
        '            <div class="textarea">'+
        '                <textarea name="" id="intro" maxlength="50"></textarea>'+
        '                <div class="exp"><span class="has">0</span>/50</div>'+
        '            </div>'+
        '        </div>'+
        '    </div>',
        "want": '<div id="extra">'+
        '        <header>'+
        '            <div class="exit">'+
        '                <i class="iconfont icon-left"></i>'+
        '            </div>'+
        '            <span>对TA的期待</span>'+
        '            <div class="save">'+
        '                <button disabled="disabled">保存</button>'+
        '            </div>'+
        '        </header>'+
        '        <div class="bottom two">'+
        '            <div class="textarea">'+
        '                <textarea name="" id="want" maxlength="50"></textarea>'+
        '                <div class="exp"><span class="has">0</span>/50</div>'+
        '            </div>'+
        '        </div>'+
        '    </div>',
        "photo": '<div id="extra" class="uploadextra">'+
        '        <div>'+
        '            <header>'+
        '                <div class="exit">'+
        '                    <i class="iconfont icon-left"></i>'+
        '                </div>'+
        '                <span>生活照</span>'+
        '                <div class="save">'+
        '                    <button disabled="disabled">保存</button>'+
        '                </div>'+
        '            </header>'+
        '            <div class="bottom">'+
        '                <div id="photodisplay">'+
        '                    <img src="/img/default_user.png" alt="">'+
        '                </div>'+
        '            </div>'+
        '            <div id="upload">'+
        '                <input type="file">'+
        '                <span>选择图片</span>'+
        '            </div>'+
        '        </div>'+
        '    </div>'
    }
    if(typeof document.body.style.webkitTransform !== undefined) {
        prefix = "webkit";
    } else if(typeof document.body.style.msTransform !== undefined) {
        prefix = "ms";
    } else if(typeof document.body.style.oTransform !== undefined) {
        prefix = "o";
    } else if(typeof document.body.style.mozTransform !== undefined) {
        prefix = "moz";
    } else if(typeof document.body.style.transform !== undefined) {
        prefix = "";
    }
    document.body.addEventListener("touchstart", function(e) {
        var node;
        if(e.target.className.indexOf("change") !== -1) {
            node = e.target;
        } else if(e.target.parentNode.className.indexOf("change") !== -1) {
            node = e.target.parentNode;
        } else if(e.target.parentNode.parentNode.className.indexOf("change") !== -1) {
            node = e.target.parentNode.parentNode
        }
        if(node) {
            if(node.id === "height") {
                createHeight();
            } else if(node.id === "home") {
                createHome()
            } else if(node.id === "department") {
                createDepartment()
            } else if(node.id === "constellation") {
                createConstellation();
            } else if(node.id === "grade") {
                createGrade();
            } else if(node.id === "intro") {
                createIntro();
            } else if(node.id === "want") {
                createWant();
            } else if(node.id === "photo") {
                createPhoto();
            }
        }
    }, false);
    function up(ele, num) {
        if(!prefix) {
            ele.style.transform = "translate3d(0, " + num + "px, 0)";
        } else {
            ele.style[prefix + "Transform"] = "translate3d(0, " + num + "px, 0)";
        }
    }
    function createHeight() {
        var html = index['height']
        document.body.innerHTML += html
        var heighttext = document.getElementById("heighttext");
        var set = document.getElementsByClassName("set")[0];
        var cover = document.getElementById("cover");
        var init;
        var select = document.getElementsByClassName("select")[0];
        var option = select.getElementsByClassName('option')[0];
        var highinit;
        var highlight;
        var divs = option.getElementsByTagName('div');
        var initTop;
        var midTop;
        var dy;
        if(heighttext.getAttribute('attr-num')) {
            highinit = heighttext.getAttribute('attr-num') - 137;
        } else {
            var gender = document.getElementById("gendertext");
            if(gender.textContent.trim() == "男") {
                highinit = 33;
            } else {
                highinit = 23;
            }
        }
        initTop = (highinit - 1) * (-80);
        var now = divs[highinit], pre = divs[highinit - 1], next = divs[highinit + 1];
        var save = document.getElementsByClassName("save")[0];
        var cancel = document.getElementsByClassName("cancel")[0];
        now.classList.add('highlight');
        now.classList.add('display');
        pre.classList.add('display')
        next.classList.add('display')
        up(option, initTop);
        select.addEventListener('touchstart', selectInit, false);
        select.addEventListener('touchmove', selectMove, false);
        select.addEventListener('touchend', selectEnd, false);
        save.addEventListener('touchstart', saveFun, false);
        cancel.addEventListener('touchstart', cancelFun, false);
        function selectInit(e) {
            e.preventDefault();
            init = e.touches[0].screenY;
        }
        function selectMove(e) {
            dy = (e.touches[0].screenY - init) / 60;
            midTop = initTop + dy * 80;
            if(midTop > 0) {
                midTop = 0;
            }
            if(midTop < -6560) {
                midTop = -6560;
            }
            highlight = highinit - Math.round(dy);
            if(highlight < 1) {
                highlight = 1;
            }
            if(highlight > 83) {
                highlight = 83;
            }
            now.classList.remove('highlight')
            now.classList.remove('display')
            pre.classList.remove('display')
            next.classList.remove('display')
            now = divs[highlight];
            pre = divs[highlight - 1];
            next = divs[highlight + 1];
            now.classList.add('highlight')
            now.classList.add('display')
            pre.classList.add('display')
            next.classList.add('display')
            up(option, midTop)
        }
        function selectEnd(e) {
            initTop = initTop + Math.round(dy) * 80;
            if(initTop > 0) {
                initTop = 0
            }
            if(initTop < -6560) {
                initTop = -6560;
            }
            highinit -= Math.round(dy)
            if(highinit < 1) {
                highinit = 1;
            }
            if(highinit > 83) {
                highinit = 83;
            }
            now.classList.remove('highlight')
            now.classList.remove('display')
            pre.classList.remove('display')
            next.classList.remove('display')
            now = divs[highinit];
            pre = divs[highinit - 1];
            next = divs[highinit + 1];
            now.classList.add('highlight')
            now.classList.add('display')
            pre.classList.add('display')
            next.classList.add('display')
            up(option, initTop)
        }
        function saveFun(e) {
            e.preventDefault();
            var height = divs[highinit].textContent;
            heighttext.textContent = height;
            heighttext.setAttribute('attr-num', height.slice(0, 3));
            set.classList.add('disappear')
            set.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun, false);
            cover.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", coverFun, false);
        }
        function cancelFun(e) {
            set.classList.add('disappear')
            set.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun, false);
            cover.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", coverFun, false);
        }
        function setFun() {
            select.removeEventListener('touchstart', selectInit);
            select.removeEventListener('touchmove', selectMove);
            select.removeEventListener('touchend', selectEnd);
            save.removeEventListener('touchstart', saveFun);
            set.removeEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun);
            cover.classList.add('disappear')
            document.body.removeChild(set);
        }
        function coverFun() {
            cover.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", coverFun);
            document.body.removeChild(cover);
        }
    }
    function createHome() {
        var html = index['home']
        document.body.innerHTML += html
        var homeset = document.getElementById('homeset');
        var hometext = document.getElementById("hometext");
        var cover = document.getElementById("cover");
        var homeIndex = {"北京":{"北京市":["东城区","西城区","朝阳区","丰台区","石景山区","海淀区","门头沟区","房山区","通州区","顺义区","昌平区","大兴区","怀柔区","平谷区","密云县","延庆县"]},"天津":{"天津市":["和平区","河东区","河西区","南开区","河北区","红桥区","东丽区","西青区","津南区","北辰区","武清区","宝坻区","滨海新区","宁河县","静海县","蓟县"]},"河北省":{"石家庄市":["长安区","桥东区","桥西区","新华区","井陉矿区","裕华区","井陉县","正定县","栾城县","行唐县","灵寿县","高邑县","深泽县","赞皇县","无极县","平山县","元氏县","赵县","辛集市","藁城市","晋州市","新乐市","鹿泉市"],"唐山市":["路南区","路北区","古冶区","开平区","丰南区","丰润区","曹妃甸区","滦县","滦南县","乐亭县","迁西县","玉田县","遵化市","迁安市"],"秦皇岛市":["海港区","山海关区","北戴河区","青龙满族自治县","昌黎县","抚宁县","卢龙县"],"邯郸市":["邯山区","丛台区","复兴区","峰峰矿区","邯郸县","临漳县","成安县","大名县","涉县","磁县","肥乡县","永年县","邱县","鸡泽县","广平县","馆陶县","魏县","曲周县","武安市"],"邢台市":["桥东区","桥西区","邢台县","临城县","内丘县","柏乡县","隆尧县","任县","南和县","宁晋县","巨鹿县","新河县","广宗县","平乡县","威县","清河县","临西县","南宫市","沙河市"],"保定市":["新市区","北市区","南市区","满城县","清苑县","涞水县","阜平县","徐水县","定兴县","唐县","高阳县","容城县","涞源县","望都县","安新县","易县","曲阳县","蠡县","顺平县","博野县","雄县","涿州市","定州市","安国市","高碑店市"],"张家口市":["桥东区","桥西区","宣化区","下花园区","宣化县","张北县","康保县","沽源县","尚义县","蔚县","阳原县","怀安县","万全县","怀来县","涿鹿县","赤城县","崇礼县"],"承德市":["双桥区","双滦区","鹰手营子矿区","承德县","兴隆县","平泉县","滦平县","隆化县","丰宁满族自治县","宽城满族自治县","围场满族蒙古族自治县"],"沧州市":["新华区","运河区","沧县","青县","东光县","海兴县","盐山县","肃宁县","南皮县","吴桥县","献县","孟村回族自治县","泊头市","任丘市","黄骅市","河间市"],"廊坊市":["安次区","广阳区","固安县","永清县","香河县","大城县","文安县","大厂回族自治县","霸州市","三河市"],"衡水市":["桃城区","枣强县","武邑县","武强县","饶阳县","安平县","故城县","景县","阜城县","冀州市","深州市"]},"山西省":{"太原市":["小店区","迎泽区","杏花岭区","尖草坪区","万柏林区","晋源区","清徐县","阳曲县","娄烦县","古交市"],"大同市":["城区","矿区","南郊区","新荣区","阳高县","天镇县","广灵县","灵丘县","浑源县","左云县","大同县"],"阳泉市":["城区","矿区","郊区","平定县","盂县"],"长治市":["城区","郊区","长治县","襄垣县","屯留县","平顺县","黎城县","壶关县","长子县","武乡县","沁县","沁源县","潞城市"],"晋城市":["城区","沁水县","阳城县","陵川县","泽州县","高平市"],"朔州市":["朔城区","平鲁区","山阴县","应县","右玉县","怀仁县"],"晋中市":["榆次区","榆社县","左权县","和顺县","昔阳县","寿阳县","太谷县","祁县","平遥县","灵石县","介休市"],"运城市":["盐湖区","临猗县","万荣县","闻喜县","稷山县","新绛县","绛县","垣曲县","夏县","平陆县","芮城县","永济市","河津市"],"忻州市":["忻府区","定襄县","五台县","代县","繁峙县","宁武县","静乐县","神池县","五寨县","岢岚县","河曲县","保德县","偏关县","原平市"],"临汾市":["尧都区","曲沃县","翼城县","襄汾县","洪洞县","古县","安泽县","浮山县","吉县","乡宁县","大宁县","隰县","永和县","蒲县","汾西县","侯马市","霍州市"],"吕梁市":["离石区","文水县","交城县","兴县","临县","柳林县","石楼县","岚县","方山县","中阳县","交口县","孝义市","汾阳市"]},"内蒙古自治区":{"呼和浩特市":["新城区","回民区","玉泉区","赛罕区","土默特左旗","托克托县","和林格尔县","清水河县","武川县"],"包头市":["东河区","昆都仑区","青山区","石拐区","白云鄂博矿区","九原区","土默特右旗","固阳县","达尔罕茂明安联合旗"],"乌海市":["海勃湾区","海南区","乌达区"],"赤峰市":["红山区","元宝山区","松山区","阿鲁科尔沁旗","巴林左旗","巴林右旗","林西县","克什克腾旗","翁牛特旗","喀喇沁旗","宁城县","敖汉旗"],"通辽市":["科尔沁区","科尔沁左翼中旗","科尔沁左翼后旗","开鲁县","库伦旗","奈曼旗","扎鲁特旗","霍林郭勒市"],"鄂尔多斯市":["东胜区","达拉特旗","准格尔旗","鄂托克前旗","鄂托克旗","杭锦旗","乌审旗","伊金霍洛旗"],"呼伦贝尔市":["海拉尔区","扎赉诺尔区","阿荣旗","莫力达瓦达斡尔族自治旗","鄂伦春自治旗","鄂温克族自治旗","陈巴尔虎旗","新巴尔虎左旗","新巴尔虎右旗","满洲里市","牙克石市","扎兰屯市","额尔古纳市","根河市"],"巴彦淖尔市":["临河区","五原县","磴口县","乌拉特前旗","乌拉特中旗","乌拉特后旗","杭锦后旗"],"乌兰察布市":["集宁区","卓资县","化德县","商都县","兴和县","凉城县","察哈尔右翼前旗","察哈尔右翼中旗","察哈尔右翼后旗","四子王旗","丰镇市"],"兴安盟":["乌兰浩特市","阿尔山市","科尔沁右翼前旗","科尔沁右翼中旗","扎赉特旗","突泉县"],"锡林郭勒盟":["二连浩特市","锡林浩特市","阿巴嘎旗","苏尼特左旗","苏尼特右旗","东乌珠穆沁旗","西乌珠穆沁旗","太仆寺旗","镶黄旗","正镶白旗","正蓝旗","多伦县"],"阿拉善盟":["阿拉善左旗","阿拉善右旗","额济纳旗"]},"辽宁省":{"沈阳市":["和平区","沈河区","大东区","皇姑区","铁西区","苏家屯区","东陵区","沈北新区","于洪区","辽中县","康平县","法库县","新民市"],"大连市":["中山区","西岗区","沙河口区","甘井子区","旅顺口区","金州区","长海县","瓦房店市","普兰店市","庄河市"],"鞍山市":["铁东区","铁西区","立山区","千山区","台安县","岫岩满族自治县","海城市"],"抚顺市":["新抚区","东洲区","望花区","顺城区","抚顺县","新宾满族自治县","清原满族自治县"],"本溪市":["平山区","溪湖区","明山区","南芬区","本溪满族自治县","桓仁满族自治县"],"丹东市":["元宝区","振兴区","振安区","宽甸满族自治县","东港市","凤城市"],"锦州市":["古塔区","凌河区","太和区","黑山县","义县","凌海市","北镇市"],"营口市":["站前区","西市区","鲅鱼圈区","老边区","盖州市","大石桥市"],"阜新市":["海州区","新邱区","太平区","清河门区","细河区","阜新蒙古族自治县","彰武县"],"辽阳市":["白塔区","文圣区","宏伟区","弓长岭区","太子河区","辽阳县","灯塔市"],"盘锦市":["双台子区","兴隆台区","大洼县","盘山县"],"铁岭市":["银州区","清河区","铁岭县","西丰县","昌图县","调兵山市","开原市"],"朝阳市":["双塔区","龙城区","朝阳县","建平县","喀喇沁左翼蒙古族自治县","北票市","凌源市"],"葫芦岛市":["连山区","龙港区","南票区","绥中县","建昌县","兴城市"]},"吉林省":{"长春市":["南关区","宽城区","朝阳区","二道区","绿园区","双阳区","农安县","九台市","榆树市","德惠市"],"吉林市":["昌邑区","龙潭区","龙潭区","丰满区","永吉县","蛟河市","桦甸市","舒兰市","磐石市"],"四平市":["铁西区","铁东区","梨树县","伊通满族自治县","公主岭市","双辽市"],"辽源市":["龙山区","西安区","东丰县","东辽县"],"通化市":["东昌区","二道江区","通化县","辉南县","柳河县","梅河口市","集安市"],"白山市":["浑江区","江源区","抚松县","靖宇县","长白朝鲜族自治县","临江市"],"松原市":["宁江区","前郭尔罗斯蒙古族自治县","长岭县","乾安县","扶余市"],"白城市":["洮北区","镇赉县","通榆县","洮南市","大安市"],"延边朝鲜族自治州":["延吉市","图们市","敦化市","珲春市","龙井市","和龙市","汪清县","安图县"]},"黑龙江省":{"哈尔滨市":["道里区","南岗区","道外区","平房区","松北区","香坊区","呼兰区","阿城区","依兰县","方正县","宾县","巴彦县","木兰县","通河县","延寿县","双城市","尚志市","五常市"],"齐齐哈尔市":["龙沙区","建华区","铁锋区","昂昂溪区","富拉尔基区","碾子山区","梅里斯达斡尔族区","龙江县","依安县","泰来县","甘南县","富裕县","克山县","克东县","拜泉县","讷河市"],"鸡西市":["鸡冠区","恒山区","滴道区","梨树区","城子河区","麻山区","鸡东县","虎林市","密山市"],"鹤岗市":["向阳区","工农区","南山区","兴安区","东山区","兴山区","萝北县","绥滨县"],"双鸭山市":["尖山区","岭东区","四方台区","宝山区","集贤县","友谊县","宝清县","饶河县"],"大庆市":["萨尔图区","龙凤区","让胡路区","红岗区","大同区","肇州县","肇源县","林甸县","杜尔伯特蒙古族自治县"],"伊春市":["伊春区","南岔区","友好区","西林区","翠峦区","新青区","美溪区","金山屯区","五营区","乌马河区","汤旺河区","带岭区","乌伊岭区","红星区","上甘岭区","嘉荫县","铁力市"],"佳木斯市":["向阳区","前进区","东风区","郊区","桦南县","桦川县","汤原县","抚远县","同江市","富锦市"],"七台河市":["新兴区","桃山区","茄子河区","勃利县"],"牡丹江市":["东安区","阳明区","爱民区","西安区","东宁县","林口县","绥芬河市","海林市","宁安市","穆棱市"],"黑河市":["爱辉区","嫩江县","逊克县","孙吴县","北安市","五大连池市"],"绥化市":["北林区","望奎县","兰西县","青冈县","庆安县","明水县","绥棱县","安达市","肇东市","海伦市"],"大兴安岭地区":["呼玛县","塔河县","漠河县"]},"上海":{"上海市":["黄浦区","徐汇区","长宁区","静安区","普陀区","闸北区","虹口区","杨浦区","闵行区","宝山区","嘉定区","浦东新区","金山区","松江区","青浦区","奉贤区","崇明县"]},"江苏省":{"南京市":["玄武区","秦淮区","建邺区","鼓楼区","浦口区","栖霞区","雨花台区","江宁区","六合区","溧水区","高淳区"],"无锡市":["崇安区","南长区","北塘区","锡山区","惠山区","滨湖区","江阴市","宜兴市"],"徐州市":["鼓楼区","云龙区","贾汪区","泉山区","铜山区","丰县","沛县","睢宁县","新沂市","邳州市"],"常州市":["天宁区","钟楼区","戚墅堰区","新北区","武进区","溧阳市","金坛市"],"苏州市":["虎丘区","吴中区","相城区","姑苏区","吴江区","常熟市","张家港市","昆山市","太仓市"],"南通市":["崇川区","港闸区","通州区","海安县","如东县","启东市","如皋市","海门市"],"连云港市":["连云区","新浦区","海州区","赣榆县","东海县","灌云县","灌南县"],"淮安市":["清河区","淮安区","淮阴区","清浦区","涟水县","洪泽县","盱眙县","金湖县"],"盐城市":["亭湖区","盐都区","响水县","滨海县","阜宁县","射阳县","建湖县","东台市","大丰市"],"扬州市":["广陵区","邗江区","江都区","宝应县","仪征市","高邮市"],"镇江市":["京口区","润州区","丹徒区","丹阳市","扬中市","句容市"],"泰州市":["海陵区","高港区","姜堰区","兴化市","靖江市","泰兴市"],"宿迁市":["宿城区","宿豫区","沭阳县","泗阳县","泗洪县"]},"浙江省":{"杭州市":["上城区","下城区","江干区","拱墅区","西湖区","滨江区","萧山区","余杭区","桐庐县","淳安县","建德市","富阳市","临安市"],"宁波市":["海曙区","江东区","江北区","北仑区","镇海区","鄞州区","象山县","宁海县","余姚市","慈溪市","奉化市"],"温州市":["鹿城区","龙湾区","瓯海区","洞头县","永嘉县","平阳县","苍南县","文成县","泰顺县","瑞安市","乐清市"],"嘉兴市":["南湖区","秀洲区","嘉善县","海盐县","海宁市","平湖市","桐乡市"],"湖州市":["吴兴区","南浔区","德清县","长兴县","安吉县"],"绍兴市":["越城区","绍兴县","新昌县","诸暨市","上虞市","嵊州市"],"金华市":["婺城区","金东区","武义县","浦江县","磐安县","兰溪市","义乌市","东阳市","永康市"],"衢州市":["柯城区","衢江区","常山县","开化县","龙游县","江山市"],"舟山市":["定海区","普陀区","岱山县","嵊泗县"],"台州市":["椒江区","黄岩区","路桥区","玉环县","三门县","天台县","仙居县","温岭市","临海市"],"丽水市":["莲都区","青田县","缙云县","遂昌县","松阳县","云和县","庆元县","景宁畲族自治县","龙泉市"]},"安徽省":{"合肥市":["瑶海区","庐阳区","蜀山区","包河区","长丰县","肥东县","肥西县","庐江县","巢湖市"],"芜湖市":["镜湖区","弋江区","鸠江区","三山区","芜湖县","繁昌县","南陵县","无为县"],"蚌埠市":["龙子湖区","蚌山区","禹会区","淮上区","怀远县","五河县","固镇县"],"淮南市":["大通区","田家庵区","谢家集区","八公山区","潘集区","凤台县"],"马鞍山市":["花山区","雨山区","博望区","当涂县","含山县","和县"],"淮北市":["杜集区","相山区","烈山区","濉溪县"],"铜陵市":["铜官山区","狮子山区","郊区","铜陵县"],"安庆市":["迎江区","大观区","宜秀区","怀宁县","枞阳县","潜山县","太湖县","宿松县","望江县","岳西县","桐城市"],"黄山市":["屯溪区","黄山区","徽州区","歙县","休宁县","黟县","祁门县"],"滁州市":["琅琊区","南谯区","来安县","全椒县","定远县","凤阳县","天长市","明光市"],"阜阳市":["颍州区","颍东区","颍泉区","临泉县","太和县","阜南县","颍上县","界首市"],"宿州市":["埇桥区","砀山县","萧县","灵璧县","泗县"],"六安市":["金安区","裕安区","寿县","霍邱县","舒城县","金寨县","霍山县"],"亳州市":["谯城区","涡阳县","蒙城县","利辛县"],"池州市":["贵池区","东至县","石台县","青阳县"],"宣城市":["宣州区","郎溪县","广德县","泾县","绩溪县","旌德县","宁国市"]},"福建省":{"福州市":["鼓楼区","台江区","仓山区","马尾区","晋安区","闽侯县","连江县","罗源县","闽清县","永泰县","平潭县","福清市","长乐市"],"厦门市":["思明区","海沧区","湖里区","集美区","同安区","翔安区"],"莆田市":["城厢区","涵江区","荔城区","秀屿区","仙游县"],"三明市":["梅列区","三元区","明溪县","清流县","宁化县","大田县","尤溪县","沙县","将乐县","泰宁县","建宁县","永安市"],"泉州市":["鲤城区","丰泽区","洛江区","泉港区","惠安县","安溪县","永春县","德化县","金门县","石狮市","晋江市","南安市"],"漳州市":["芗城区","龙文区","云霄县","漳浦县","诏安县","长泰县","东山县","南靖县","平和县","华安县","龙海市"],"南平市":["延平区","顺昌县","浦城县","光泽县","松溪县","政和县","邵武市","武夷山市","建瓯市","建阳市"],"龙岩市":["新罗区","长汀县","永定县","上杭县","武平县","连城县","漳平市"],"宁德市":["蕉城区","霞浦县","古田县","屏南县","寿宁县","周宁县","柘荣县","福安市","福鼎市"]},"江西省":{"南昌市":["东湖区","西湖区","青云谱区","湾里区","青山湖区","南昌县","新建县","安义县","进贤县"],"景德镇市":["昌江区","珠山区","浮梁县","乐平市"],"萍乡市":["安源区","湘东区","莲花县","上栗县","芦溪县"],"九江市":["庐山区","浔阳区","九江县","武宁县","修水县","永修县","德安县","星子县","都昌县","湖口县","彭泽县","瑞昌市","共青城市"],"新余市":["渝水区","分宜县"],"鹰潭市":["月湖区","余江县","贵溪市"],"赣州市":["章贡区","赣县","信丰县","大余县","上犹县","崇义县","安远县","龙南县","定南县","全南县","宁都县","于都县","兴国县","会昌县","寻乌县","石城县","瑞金市","南康市"],"吉安市":["吉州区","青原区","吉安县","吉水县","峡江县","新干县","永丰县","泰和县","遂川县","万安县","安福县","永新县","井冈山市"],"宜春市":["袁州区","奉新县","万载县","上高县","宜丰县","靖安县","铜鼓县","丰城市","樟树市","高安市"],"抚州市":["临川区","南城县","黎川县","南丰县","崇仁县","乐安县","宜黄县","金溪县","资溪县","东乡县","广昌县"],"上饶市":["信州区","上饶县","广丰县","玉山县","铅山县","横峰县","弋阳县","余干县","鄱阳县","万年县","婺源县","德兴市"]},"山东省":{"济南市":["历下区","市中区","槐荫区","天桥区","历城区","长清区","平阴县","济阳县","商河县","章丘市"],"青岛市":["市南区","市北区","黄岛区","崂山区","李沧区","城阳区","胶州市","即墨市","平度市","莱西市"],"淄博市":["淄川区","张店区","博山区","临淄区","周村区","桓台县","高青县","沂源县"],"枣庄市":["市中区","薛城区","峄城区","台儿庄区","山亭区","滕州市"],"东营市":["东营区","河口区","垦利县","利津县","广饶县"],"烟台市":["芝罘区","福山区","牟平区","莱山区","长岛县","龙口市","莱阳市","莱州市","蓬莱市","招远市","栖霞市","海阳市"],"潍坊市":["潍城区","寒亭区","坊子区","奎文区","临朐县","昌乐县","青州市","诸城市","寿光市","安丘市","高密市","昌邑市"],"济宁市":["市中区","任城区","微山县","鱼台县","金乡县","嘉祥县","汶上县","泗水县","梁山县","曲阜市","兖州市","邹城市"],"泰安市":["泰山区","岱岳区","宁阳县","东平县","新泰市","肥城市"],"威海市":["环翠区","文登市","荣成市","乳山市"],"日照市":["东港区","岚山区","五莲县","莒县"],"莱芜市":["莱城区","钢城区"],"临沂市":["兰山区","罗庄区","河东区","沂南县","郯城县","沂水县","苍山县","费县","平邑县","莒南县","蒙阴县","临沭县"],"德州市":["德城区","陵县","宁津县","庆云县","临邑县","齐河县","平原县","夏津县","武城县","乐陵市","禹城市"],"聊城市":["东昌府区","阳谷县","莘县","茌平县","东阿县","冠县","高唐县","临清市"],"滨州市":["滨城区","惠民县","阳信县","无棣县","沾化县","博兴县","邹平县"],"菏泽市":["牡丹区","曹县","单县","成武县","巨野县","郓城县","鄄城县","定陶县","东明县"]},"河南省":{"郑州市":["中原区","二七区","管城回族区","金水区","上街区","惠济区","中牟县","巩义市","荥阳市","新密市","新郑市","登封市"],"开封市":["龙亭区","顺河回族区","鼓楼区","禹王台区","金明区","杞县","通许县","尉氏县","开封县","兰考县"],"洛阳市":["老城区","西工区","瀍河回族区","涧西区","吉利区","洛龙区","孟津县","新安县","栾川县","嵩县","汝阳县","宜阳县","洛宁县","伊川县","偃师市"],"平顶山市":["新华区","卫东区","石龙区","湛河区","宝丰县","叶县","鲁山县","郏县","舞钢市","汝州市"],"安阳市":["文峰区","北关区","殷都区","龙安区","安阳县","汤阴县","滑县","内黄县","林州市"],"鹤壁市":["鹤山区","山城区","淇滨区","浚县","淇县"],"新乡市":["红旗区","卫滨区","凤泉区","牧野区","新乡县","获嘉县","原阳县","延津县","封丘县","长垣县","卫辉市","辉县市"],"焦作市":["解放区","中站区","马村区","山阳区","修武县","博爱县","武陟县","温县","沁阳市","孟州市"],"濮阳市":["华龙区","清丰县","南乐县","范县","台前县","濮阳县"],"许昌市":["魏都区","许昌县","鄢陵县","襄城县","禹州市","长葛市"],"漯河市":["源汇区","郾城区","召陵区","舞阳县","临颍县"],"三门峡市":["湖滨区","渑池县","陕县","卢氏县","义马市","灵宝市"],"南阳市":["宛城区","卧龙区","南召县","方城县","西峡县","镇平县","内乡县","淅川县","社旗县","唐河县","新野县","桐柏县","邓州市"],"商丘市":["梁园区","睢阳区","民权县","睢县","宁陵县","柘城县","虞城县","夏邑县","永城市"],"信阳市":["浉河区","平桥区","罗山县","光山县","新县","商城县","固始县","潢川县","淮滨县","息县"],"周口市":["川汇区","扶沟县","西华县","商水县","沈丘县","郸城县","淮阳县","太康县","鹿邑县","项城市"],"驻马店市":["驿城区","西平县","上蔡县","平舆县","正阳县","确山县","泌阳县","汝南县","遂平县","新蔡县"],"济源市":1},"湖北省":{"武汉市":["江岸区","江汉区","硚口区","汉阳区","武昌区","青山区","洪山区","东西湖区","汉南区","蔡甸区","江夏区","黄陂区","新洲区"],"黄石市":["黄石港区","西塞山区","下陆区","铁山区","阳新县","大冶市"],"十堰市":["茅箭区","张湾区","郧县","郧西县","竹山县","竹溪县","房县","丹江口市"],"宜昌市":["西陵区","伍家岗区","点军区","猇亭区","夷陵区","远安县","兴山县","秭归县","长阳土家族自治县","五峰土家族自治县","宜都市","当阳市","枝江市"],"襄阳市":["襄城区","樊城区","襄州区","南漳县","谷城县","保康县","老河口市","枣阳市","宜城市"],"鄂州市":["梁子湖区","华容区","鄂城区"],"荆门市":["东宝区","掇刀区","京山县","沙洋县","钟祥市"],"孝感市":["孝南区","孝昌县","大悟县","云梦县","应城市","安陆市","汉川市"],"荆州市":["沙市区","荆州区","公安县","监利县","江陵县","石首市","洪湖市","松滋市"],"黄冈市":["黄州区","团风县","红安县","罗田县","英山县","浠水县","蕲春县","黄梅县","麻城市","武穴市"],"咸宁市":["咸安区","嘉鱼县","通城县","崇阳县","通山县","赤壁市"],"随州市":["曾都区","随县","广水市"],"恩施土家族苗族自治州":["恩施市","利川市","建始县","巴东县","宣恩县","咸丰县","来凤县","鹤峰县"],"仙桃市":1,"潜江市":1,"天门市":1,"神农架林区":1},"湖南省":{"长沙市":["芙蓉区","天心区","岳麓区","开福区","雨花区","望城区","长沙县","宁乡县","浏阳市"],"株洲市":["荷塘区","芦淞区","石峰区","天元区","株洲县","攸县","茶陵县","炎陵县","醴陵市"],"湘潭市":["雨湖区","岳塘区","湘潭县","湘乡市","韶山市"],"衡阳市":["珠晖区","雁峰区","石鼓区","蒸湘区","南岳区","衡阳县","衡南县","衡山县","衡东县","祁东县","耒阳市","常宁市"],"邵阳市":["双清区","大祥区","北塔区","邵东县","新邵县","邵阳县","隆回县","洞口县","绥宁县","新宁县","城步苗族自治县","武冈市"],"岳阳市":["岳阳楼区","云溪区","君山区","岳阳县","华容县","湘阴县","平江县","汨罗市","临湘市"],"常德市":["武陵区","鼎城区","安乡县","汉寿县","澧县","临澧县","桃源县","石门县","津市市"],"张家界市":["永定区","武陵源区","慈利县","桑植县"],"益阳市":["资阳区","赫山区","南县","桃江县","安化县","沅江市"],"郴州市":["北湖区","苏仙区","桂阳县","宜章县","永兴县","嘉禾县","临武县","汝城县","桂东县","安仁县","资兴市"],"永州市":["零陵区","冷水滩区","祁阳县","东安县","双牌县","道县","江永县","宁远县","蓝山县","新田县","江华瑶族自治县"],"怀化市":["鹤城区","中方县","沅陵县","辰溪县","溆浦县","会同县","麻阳苗族自治县","新晃侗族自治县","芷江侗族自治县","靖州苗族侗族自治县","通道侗族自治县","洪江市"],"娄底市":["娄星区","双峰县","新化县","冷水江市","涟源市"],"湘西土家族苗族自治州":["吉首市","泸溪县","凤凰县","花垣县","保靖县","古丈县","永顺县","龙山县"]},"广东省":{"广州市":["荔湾区","越秀区","海珠区","天河区","白云区","黄埔区","番禺区","花都区","南沙区","萝岗区","增城市","从化市"],"韶关市":["武江区","浈江区","曲江区","始兴县","仁化县","翁源县","乳源瑶族自治县","新丰县","乐昌市","南雄市"],"深圳市":["罗湖区","福田区","南山区","宝安区","龙岗区","盐田区"],"珠海市":["香洲区","斗门区","金湾区"],"汕头市":["龙湖区","金平区","濠江区","潮阳区","潮南区","澄海区","南澳县"],"佛山市":["禅城区","南海区","顺德区","三水区","高明区"],"江门市":["蓬江区","江海区","新会区","台山市","开平市","鹤山市","恩平市"],"湛江市":["赤坎区","霞山区","坡头区","麻章区","遂溪县","徐闻县","廉江市","雷州市","吴川市"],"茂名市":["茂南区","茂港区","电白县","高州市","化州市","信宜市"],"肇庆市":["端州区","鼎湖区","广宁县","怀集县","封开县","德庆县","高要市","四会市"],"惠州市":["惠城区","惠阳区","博罗县","惠东县","龙门县"],"梅州市":["梅江区","梅县","大埔县","丰顺县","五华县","平远县","蕉岭县","兴宁市"],"汕尾市":["城区","海丰县","陆河县","陆丰市"],"河源市":["源城区","紫金县","龙川县","连平县","和平县","东源县"],"阳江市":["江城区","阳西县","阳东县","阳春市"],"清远市":["清城区","清新区","佛冈县","阳山县","连山壮族瑶族自治县","连南瑶族自治县","英德市","连州市"],"东莞市":1,"中山市":1,"潮州市":["湘桥区","潮安区","饶平县"],"揭阳市":["榕城区","揭东区","揭西县","惠来县","普宁市"],"云浮市":["云城区","新兴县","郁南县","云安县","罗定市"]},"广西壮族自治区":{"南宁市":["兴宁区","青秀区","江南区","西乡塘区","良庆区","邕宁区","武鸣县","隆安县","马山县","上林县","宾阳县","横县"],"柳州市":["城中区","鱼峰区","柳南区","柳北区","柳江县","柳城县","鹿寨县","融安县","融水苗族自治县","三江侗族自治县"],"桂林市":["秀峰区","叠彩区","象山区","七星区","雁山区","临桂区","阳朔县","灵川县","全州县","兴安县","永福县","灌阳县","龙胜各族自治县","资源县","平乐县","荔浦县","恭城瑶族自治县"],"梧州市":["万秀区","长洲区","龙圩区","苍梧县","藤县","蒙山县","岑溪市"],"北海市":["海城区","银海区","铁山港区","合浦县"],"防城港市":["港口区","防城区","上思县","东兴市"],"钦州市":["钦南区","钦北区","灵山县","浦北县"],"贵港市":["港北区","港南区","覃塘区","平南县","桂平市"],"玉林市":["玉州区","福绵区","容县","陆川县","博白县","兴业县","北流市"],"百色市":["右江区","田阳县","田东县","平果县","德保县","靖西县","那坡县","凌云县","乐业县","田林县","西林县","隆林各族自治县"],"贺州市":["八步区","昭平县","钟山县","富川瑶族自治县"],"河池市":["金城江区","南丹县","天峨县","凤山县","东兰县","罗城仫佬族自治县","环江毛南族自治县","巴马瑶族自治县","都安瑶族自治县","大化瑶族自治县","宜州市"],"来宾市":["兴宾区","忻城县","象州县","武宣县","金秀瑶族自治县","合山市"],"崇左市":["江州区","扶绥县","宁明县","龙州县","大新县","天等县","凭祥市"]},"海南省":{"海口市":["秀英区","龙华区","琼山区","美兰区"],"三亚市":1,"三沙市":["西沙群岛","南沙群岛","中沙群岛的岛礁及其海域"],"五指山市":1,"琼海市":1,"儋州市":1,"文昌市":1,"万宁市":1,"东方市":1,"定安县":1,"屯昌县":1,"澄迈县":1,"临高县":1,"白沙黎族自治县":1,"昌江黎族自治县":1,"乐东黎族自治县":1,"陵水黎族自治县":1,"保亭黎族苗族自治县":1,"琼中黎族苗族自治县":1},"重庆":{"重庆市":["万州区","涪陵区","渝中区","大渡口区","江北区","沙坪坝区","九龙坡区","南岸区","北碚区","綦江区","大足区","渝北区","巴南区","黔江区","长寿区","江津区","合川区","永川区","南川区","潼南县","铜梁县","荣昌县","璧山县","梁平县","城口县","丰都县","垫江县","武隆县","忠县","开县","云阳县","奉节县","巫山县","巫溪县","石柱土家族自治县","秀山土家族苗族自治县","酉阳土家族苗族自治县","彭水苗族土家族自治县"]},"四川省":{"成都市":["锦江区","青羊区","金牛区","武侯区","成华区","龙泉驿区","青白江区","新都区","温江区","金堂县","双流县","郫县","大邑县","蒲江县","新津县","都江堰市","彭州市","邛崃市","崇州市"],"自贡市":["自流井区","贡井区","大安区","沿滩区","荣县","富顺县"],"攀枝花市":["东区","西区","仁和区","米易县","盐边县"],"泸州市":["江阳区","纳溪区","龙马潭区","泸县","合江县","叙永县","古蔺县"],"德阳市":["旌阳区","中江县","罗江县","广汉市","什邡市","绵竹市"],"绵阳市":["涪城区","游仙区","三台县","盐亭县","安县","梓潼县","北川羌族自治县","平武县","江油市"],"广元市":["利州区","元坝区","朝天区","旺苍县","青川县","剑阁县","苍溪县"],"遂宁市":["船山区","安居区","蓬溪县","射洪县","大英县"],"内江市":["市中区","东兴区","威远县","资中县","隆昌县"],"乐山市":["市中区","沙湾区","五通桥区","金口河区","犍为县","井研县","夹江县","沐川县","峨边彝族自治县","马边彝族自治县","峨眉山市"],"南充市":["顺庆区","高坪区","嘉陵区","南部县","营山县","蓬安县","仪陇县","西充县","阆中市"],"眉山市":["东坡区","仁寿县","彭山县","洪雅县","丹棱县","青神县"],"宜宾市":["翠屏区","南溪区","宜宾县","江安县","长宁县","高县","珙县","筠连县","兴文县","屏山县"],"广安市":["广安区","前锋区","岳池县","武胜县","邻水县","华蓥市"],"达州市":["通川区","达川区","宣汉县","开江县","大竹县","渠县","万源市"],"雅安市":["雨城区","名山区","荥经县","汉源县","石棉县","天全县","芦山县","宝兴县"],"巴中市":["巴州区","恩阳区","通江县","南江县","平昌县"],"资阳市":["雁江区","安岳县","乐至县","简阳市"],"阿坝藏族羌族自治州":["汶川县","理县","茂县","松潘县","九寨沟县","金川县","小金县","黑水县","马尔康县","壤塘县","阿坝县","若尔盖县","红原县"],"甘孜藏族自治州":["康定县","泸定县","丹巴县","九龙县","雅江县","道孚县","炉霍县","甘孜县","新龙县","德格县","白玉县","石渠县","色达县","理塘县","巴塘县","乡城县","稻城县","得荣县"],"凉山彝族自治州":["西昌市","木里藏族自治县","盐源县","德昌县","会理县","会东县","宁南县","普格县","布拖县","金阳县","昭觉县","喜德县","冕宁县","越西县","甘洛县","美姑县","雷波县"]},"贵州省":{"贵阳市":["南明区","云岩区","花溪区","乌当区","白云区","观山湖区","开阳县","息烽县","修文县","清镇市"],"六盘水市":["钟山区","六枝特区","水城县","盘县"],"遵义市":["红花岗区","汇川区","遵义县","桐梓县","绥阳县","正安县","道真仡佬族苗族自治县","务川仡佬族苗族自治县","凤冈县","湄潭县","余庆县","习水县","赤水市","仁怀市"],"安顺市":["西秀区","平坝县","普定县","镇宁布依族苗族自治县","关岭布依族苗族自治县","紫云苗族布依族自治县"],"毕节市":["七星关区","大方县","黔西县","金沙县","织金县","纳雍县","威宁彝族回族苗族自治县","赫章县"],"铜仁市":["碧江区","万山区","江口县","玉屏侗族自治县","石阡县","思南县","印江土家族苗族自治县","德江县","沿河土家族自治县","松桃苗族自治县"],"黔西南布依族苗族自治州":["兴义市","兴仁县","普安县","晴隆县","贞丰县","望谟县","册亨县","安龙县"],"黔东南苗族侗族自治州":["凯里市","黄平县","施秉县","三穗县","镇远县","岑巩县","天柱县","锦屏县","剑河县","台江县","黎平县","榕江县","从江县","雷山县","麻江县","丹寨县"],"黔南布依族苗族自治州":["都匀市","福泉市","荔波县","贵定县","瓮安县","独山县","平塘县","罗甸县","长顺县","龙里县","惠水县","三都水族自治县"]},"云南省":{"昆明市":["五华区","盘龙区","官渡区","西山区","东川区","呈贡区","晋宁县","富民县","宜良县","石林彝族自治县","嵩明县","禄劝彝族苗族自治县","寻甸回族彝族自治县","安宁市"],"曲靖市":["麒麟区","马龙县","陆良县","师宗县","罗平县","富源县","会泽县","沾益县","宣威市"],"玉溪市":["红塔区","江川县","澄江县","通海县","华宁县","易门县","峨山彝族自治县","新平彝族傣族自治县","元江哈尼族彝族傣族自治县"],"保山市":["隆阳区","施甸县","腾冲县","龙陵县","昌宁县"],"昭通市":["昭阳区","鲁甸县","巧家县","盐津县","大关县","永善县","绥江县","镇雄县","彝良县","威信县","水富县"],"丽江市":["古城区","玉龙纳西族自治县","永胜县","华坪县","宁蒗彝族自治县"],"普洱市":["思茅区","宁洱哈尼族彝族自治县","墨江哈尼族自治县","景东彝族自治县","景谷傣族彝族自治县","镇沅彝族哈尼族拉祜族自治县","江城哈尼族彝族自治县","孟连傣族拉祜族佤族自治县","澜沧拉祜族自治县","西盟佤族自治县"],"临沧市":["临翔区","凤庆县","云县","永德县","镇康县","双江拉祜族佤族布朗族傣族自治县","耿马傣族佤族自治县","沧源佤族自治县"],"楚雄彝族自治州":["楚雄市","双柏县","牟定县","南华县","姚安县","大姚县","永仁县","元谋县","武定县","禄丰县"],"红河哈尼族彝族自治州":["个旧市","开远市","蒙自市","弥勒市","屏边苗族自治县","建水县","石屏县","泸西县","元阳县","红河县","金平苗族瑶族傣族自治县","绿春县","河口瑶族自治县"],"文山壮族苗族自治州":["文山市","砚山县","西畴县","麻栗坡县","马关县","丘北县","广南县","富宁县"],"西双版纳傣族自治州":["景洪市","勐海县","勐腊县"],"大理白族自治州":["大理市","漾濞彝族自治县","祥云县","宾川县","弥渡县","南涧彝族自治县","巍山彝族回族自治县","永平县","云龙县","洱源县","剑川县","鹤庆县"],"德宏傣族景颇族自治州":["瑞丽市","芒市","梁河县","盈江县","陇川县"],"怒江傈僳族自治州":["泸水县","福贡县","贡山独龙族怒族自治县","兰坪白族普米族自治县"],"迪庆藏族自治州":["香格里拉县","德钦县","维西傈僳族自治县"]},"西藏自治区":{"拉萨市":["城关区","林周县","当雄县","尼木县","曲水县","堆龙德庆县","达孜县","墨竹工卡县"],"昌都地区":["昌都县","江达县","贡觉县","类乌齐县","丁青县","察雅县","八宿县","左贡县","芒康县","洛隆县","边坝县"],"山南地区":["乃东县","扎囊县","贡嘎县","桑日县","琼结县","曲松县","措美县","洛扎县","加查县","隆子县","错那县","浪卡子县"],"日喀则地区":["日喀则市","南木林县","江孜县","定日县","萨迦县","拉孜县","昂仁县","谢通门县","白朗县","仁布县","康马县","定结县","仲巴县","亚东县","吉隆县","聂拉木县","萨嘎县","岗巴县"],"那曲地区":["那曲县","嘉黎县","比如县","聂荣县","安多县","申扎县","索县","班戈县","巴青县","尼玛县","双湖县"],"阿里地区":["普兰县","札达县","噶尔县","日土县","革吉县","改则县","措勤县"],"林芝地区":["林芝县","工布江达县","米林县","墨脱县","波密县","察隅县","朗县"]},"陕西省":{"西安市":["新城区","碑林区","莲湖区","灞桥区","未央区","雁塔区","阎良区","临潼区","长安区","蓝田县","周至县","户县","高陵县"],"铜川市":["王益区","印台区","耀州区","宜君县"],"宝鸡市":["渭滨区","金台区","陈仓区","凤翔县","岐山县","扶风县","眉县","陇县","千阳县","麟游县","凤县","太白县"],"咸阳市":["秦都区","杨陵区","渭城区","三原县","泾阳县","乾县","礼泉县","永寿县","彬县","长武县","旬邑县","淳化县","武功县","兴平市"],"渭南市":["临渭区","华县","潼关县","大荔县","合阳县","澄城县","蒲城县","白水县","富平县","韩城市","华阴市"],"延安市":["宝塔区","延长县","延川县","子长县","安塞县","志丹县","吴起县","甘泉县","富县","洛川县","宜川县","黄龙县","黄陵县"],"汉中市":["汉台区","南郑县","城固县","洋县","西乡县","勉县","宁强县","略阳县","镇巴县","留坝县","佛坪县"],"榆林市":["榆阳区","神木县","府谷县","横山县","靖边县","定边县","绥德县","米脂县","佳县","吴堡县","清涧县","子洲县"],"安康市":["汉滨区","汉阴县","石泉县","宁陕县","紫阳县","岚皋县","平利县","镇坪县","旬阳县","白河县"],"商洛市":["商州区","洛南县","丹凤县","商南县","山阳县","镇安县","柞水县"]},"甘肃省":{"兰州市":["城关区","七里河区","西固区","安宁区","红古区","永登县","皋兰县","榆中县"],"嘉峪关市":1,"金昌市":["金川区","永昌县"],"白银市":["白银区","平川区","靖远县","会宁县","景泰县"],"天水市":["秦州区","麦积区","清水县","秦安县","甘谷县","武山县","张家川回族自治县"],"武威市":["凉州区","民勤县","古浪县","天祝藏族自治县"],"张掖市":["甘州区","肃南裕固族自治县","民乐县","临泽县","高台县","山丹县"],"平凉市":["崆峒区","泾川县","灵台县","崇信县","华亭县","庄浪县","静宁县"],"酒泉市":["肃州区","金塔县","瓜州县","肃北蒙古族自治县","阿克塞哈萨克族自治县","玉门市","敦煌市"],"庆阳市":["西峰区","庆城县","环县","华池县","合水县","正宁县","宁县","镇原县"],"定西市":["安定区","通渭县","陇西县","渭源县","临洮县","漳县","岷县"],"陇南市":["武都区","成县","文县","宕昌县","康县","西和县","礼县","徽县","两当县"],"临夏回族自治州":["临夏市","临夏县","康乐县","永靖县","广河县","和政县","东乡族自治县","积石山保安族东乡族撒拉族自治县"],"甘南藏族自治州":["合作市","临潭县","卓尼县","舟曲县","迭部县","玛曲县","碌曲县","夏河县"]},"青海省":{"西宁市":["城东区","城中区","城西区","城北区","大通回族土族自治县","湟中县","湟源县"],"海东市":["乐都区","平安县","民和回族土族自治县","互助土族自治县","化隆回族自治县","循化撒拉族自治县"],"海北藏族自治州":["门源回族自治县","祁连县","海晏县","刚察县"],"黄南藏族自治州":["同仁县","尖扎县","泽库县","河南蒙古族自治县"],"海南藏族自治州":["共和县","同德县","贵德县","兴海县","贵南县"],"果洛藏族自治州":["玛沁县","班玛县","甘德县","达日县","久治县","玛多县"],"玉树藏族自治州":["玉树市","杂多县","称多县","治多县","囊谦县","曲麻莱县"],"海西蒙古族藏族自治州":["格尔木市","德令哈市","乌兰县","都兰县","天峻县"]},"宁夏回族自治区":{"银川市":["兴庆区","西夏区","金凤区","永宁县","贺兰县","灵武市"],"石嘴山市":["大武口区","惠农区","平罗县"],"吴忠市":["利通区","红寺堡区","盐池县","同心县","青铜峡市"],"固原市":["原州区","西吉县","隆德县","泾源县","彭阳县"],"中卫市":["沙坡头区","中宁县","海原县"]},"新疆维吾尔自治区":{"乌鲁木齐市":["天山区","沙依巴克区","新市区","水磨沟区","头屯河区","达坂城区","米东区","乌鲁木齐县"],"克拉玛依市":["独山子区","克拉玛依区","白碱滩区","乌尔禾区"],"吐鲁番地区":["吐鲁番市","鄯善县","托克逊县"],"哈密地区":["哈密市","巴里坤哈萨克自治县","伊吾县"],"昌吉回族自治州":["昌吉市","阜康市","呼图壁县","玛纳斯县","奇台县","吉木萨尔县","木垒哈萨克自治县"],"博尔塔拉蒙古自治州":["博乐市","阿拉山口市","精河县","温泉县"],"巴音郭楞蒙古自治州":["库尔勒市","轮台县","尉犁县","若羌县","且末县","焉耆回族自治县","和静县","和硕县","博湖县"],"阿克苏地区":["阿克苏市","温宿县","库车县","沙雅县","新和县","拜城县","乌什县","阿瓦提县","柯坪县"],"克孜勒苏柯尔克孜自治州":["阿图什市","阿克陶县","阿合奇县","乌恰县"],"喀什地区":["喀什市","疏附县","疏勒县","英吉沙县","泽普县","莎车县","叶城县","麦盖提县","岳普湖县","伽师县","巴楚县","塔什库尔干塔吉克自治县"],"和田地区":["和田市","和田县","墨玉县","皮山县","洛浦县","策勒县","于田县","民丰县"],"伊犁哈萨克自治州":["伊宁市","奎屯市","伊宁县","察布查尔锡伯自治县","霍城县","巩留县","新源县","昭苏县","特克斯县","尼勒克县"],"塔城地区":["塔城市","乌苏市","额敏县","沙湾县","托里县","裕民县","和布克赛尔蒙古自治县"],"阿勒泰地区":["阿勒泰市","布尔津县","富蕴县","福海县","哈巴河县","青河县","吉木乃县"],"石河子市":1,"阿拉尔市":1,"图木舒克市":1,"五家渠市":1},"台湾省":{"台北市":["中正区","大同区","中山区","松山区","大安区","万华区","信义区","士林区","北投区","内湖区","南港区","文山区"],"新北市":1,"台中市":1,"台南市":1,"高雄市":1,"基隆市":1,"新竹市":1,"嘉义市":1,"桃园县":1,"苗栗县":1,"彰化县":1,"南投县":1,"云林县":1,"嘉义县":1,"屏东县":1,"宜兰县":1,"花莲县":1,"台东县":1,"澎湖县":1,"金门县":1,"连江县":1},"香港特别行政区":["中西区","湾仔区","东区","南区","油尖旺区","深水埗区","九龙城区","黄大仙区","观塘区","葵青区","荃湾区","屯门区","元朗区","北区","大埔区","沙田区","西贡区","离岛区"],"澳门特别行政区":["花地玛堂区","圣安多尼堂区","大堂区","望德堂区","风顺堂区","嘉模堂区","圣方济各堂区","路氹城"]}
        var option1 = document.getElementById("option1")
        var option2 = document.getElementById("option2")
        var option3 = document.getElementById("option3")
        var cancel = homeset.getElementsByClassName("cancel")[0]
        var confirm = homeset.getElementsByClassName("confirm")[0]
        var arr1, arr2, arr3;
        var html1, html2, html3;
        var divs1, divs2, divs3;
        var highinit1, highinit2, highinit3;
        var initposY, thenposY, dy;
        var highlight1, highlight2, highlight3;
        var target, targetid;
        var initTop1, initTop2, initTop3;
        var midTop1, midTop2, midTop3;
        var length2, length3, maxTop2, maxTop3;
        init();
        homeset.addEventListener('touchstart', selectInit, false);
        homeset.addEventListener('touchmove', selectMove, false);
        homeset.addEventListener('touchend', selectEnd, false);
        cancel.addEventListener('touchstart', cancelFun, false);
        confirm.addEventListener('touchstart', confirmFun, false);

        function selectInit(e) {
            e.preventDefault();
            target = e.target.parentNode;
            if(target.id === 'option1') {
                targetid = 1;
            } else if(target.id === "option2") {
                targetid = 2;
            } else if(target.id === "option3") {
                targetid = 3;
            } else {
                targetid = 0;
            }
            initposY = e.touches[0].screenY;
        }

        function selectMove(e) {
            e.preventDefault();
            thenposY = e.touches[0].screenY;
            dy = (thenposY - initposY) / 60;
            if(targetid === 1) {
                midTop1 = initTop1 + dy * 35;
                if(midTop1 > 0) {
                    midTop1 = 0
                }
                if(midTop1 < -1155) {
                    midTop1 = -1155;
                }
                remove(divs1, highlight1 ? highlight1 : highinit1);
                highlight1 = highinit1 - Math.round(dy);
                if(highlight1 < 3) {
                    highlight1 = 3;
                }
                if(highlight1 > 36) {
                    highlight1 = 36;
                }
                add(divs1, highlight1);
                up(option1, midTop1);
            }
            if(targetid === 2) {

                midTop2 = initTop2 + dy * 35;
                if(midTop2 > 0) {
                    midTop2 = 0
                }
                if(midTop2 < maxTop2) {
                    midTop2 = maxTop2;
                }
                remove(divs2, highlight2 ? highlight2 : highinit2);
                highlight2 = highinit2 - Math.round(dy);
                if(highlight2 < 3) {
                    highlight2 = 3;
                }
                if(highlight2 > 3 + length2) {
                    highlight2 = 3 + length2;
                }
                add(divs2, highlight2);
                up(option2, midTop2);
            }
            if(targetid === 3) {
                midTop3 = initTop3 + dy * 35;
                if(midTop3 > 0) {
                    midTop3 = 0
                }
                if(midTop3 < maxTop3) {
                    midTop3 = maxTop3;
                }
                remove(divs3, highlight3 ? highlight3 : highinit3);
                highlight3 = highinit3 - Math.round(dy);
                if(highlight3 < 3) {
                    highlight3 = 3;
                }
                if(highlight3 > 3 + length3) {
                    highlight3 = 3 + length3;
                }
                add(divs3, highlight3);
                up(option3, midTop3);
            }
        }

        function selectEnd(e) {
            e.preventDefault();
            if(targetid === 1) {
                if(highlight1) {
                    initTop1 = initTop1 + Math.round(dy) * 35;
                    if(initTop1 > 0) {
                        initTop1 = 0
                    }
                    if(initTop1 < -1155) {
                        initTop1 = -1155;
                    }
                    if(highinit1 != highlight1) {
                        highinit1 -= Math.round(dy)
                        if(highinit1 < 3) {
                            highinit1 = 3;
                        }
                        if(highinit1 > 36) {
                            highinit1 = 36;
                        }
                        remove(divs1, highlight1 ? highlight1 : highinit1);
                        add(divs1, highinit1);

                        //  结束之后刷新第二和第三列表
                        if(Object.prototype.toString.call(homeIndex[arr1[highinit1 - 3]]) === "[object Object]") {
                            arr2 = Object.keys(homeIndex[arr1[highinit1 - 3]])
                            html2 = "<div></div><div></div><div></div>"
                            arr2.map(function(data) {
                                html2 += "<div>" + data + "</div>";
                            })
                            html2 += "<div></div><div></div><div></div>";
                            option2.innerHTML = html2;
                            highinit2 = 3;
                            divs2 = option2.getElementsByTagName("div");
                            add(divs2, highinit2);
                            initTop2 = 0;
                            length2 = arr2.length - 1;
                            maxTop2 = (-35) * length2;
                            up(option2, initTop2);      // 恢复原来的位置

                            if(typeof homeIndex[arr1[highinit1 - 3]][arr2[highinit2 - 3]] == "object") {
                                html3 = "<div></div><div></div><div></div>";
                                arr3 = homeIndex[arr1[highinit1 - 3]][arr2[highinit2 - 3]];
                                arr3.map(function(data) {
                                    html3 += "<div>" + data + "</div>"
                                })
                                html3 += "<div></div><div></div><div></div>";
                                option3.innerHTML = html3;
                                highinit3 = 3;
                                divs3 = option3.getElementsByTagName("div");
                                add(divs3, highinit3);
                                initTop3 = 0;
                                length3 = arr3.length - 1;
                                maxTop3 = (-35) * length3;
                                up(option3, initTop3);
                            } else {
                                option3.innerHTML = "";
                                arr3 = undefined;
                            }
                        } else {
                            arr2 = homeIndex[arr1[highinit1 - 3]];
                            html2 = "<div></div><div></div><div></div>"
                            arr2.map(function(data) {
                                html2 += "<div>" + data + "</div>";
                            })
                            html2 += "<div></div><div></div><div></div>";
                            option2.innerHTML = html2;
                            highinit2 = 3;
                            divs2 = option2.getElementsByTagName("div");
                            add(divs2, highinit2);
                            initTop2 = 0;
                            length2 = arr2.length - 1;
                            maxTop2 = (-35) * length2;
                            up(option2, initTop2);

                            option3.innerHTML = "";
                            arr3 = undefined;
                        }
                    }
                    up(option1, initTop1)
                }
                highlight1 = 0;
            }
            if(targetid === 2) {
                if(highlight2) {
                    initTop2 = initTop2 + Math.round(dy) * 35;
                    if(initTop2 > 0) {
                        initTop2 = 0
                    }
                    if(initTop2 < maxTop2) {
                        initTop2 = maxTop2;
                    }
                    if(highinit2 != highlight2) {
                        highinit2 -= Math.round(dy)
                        if(highinit2 < 3) {
                            highinit2 = 3;
                        }
                        if(highinit2 > 3 + length2) {
                            highinit2 = 3 + length2;
                        }
                        remove(divs2, highlight2 ? highlight2 : highinit2);
                        add(divs2, highinit2);

                        //  刷新第三列表
                        if(typeof homeIndex[arr1[highinit1 - 3]][arr2[highinit2 - 3]] == "object") {
                            html3 = "<div></div><div></div><div></div>";
                            arr3 = homeIndex[arr1[highinit1 - 3]][arr2[highinit2 - 3]];
                            arr3.map(function(data) {
                                html3 += "<div>" + data + "</div>"
                            })
                            html3 += "<div></div><div></div><div></div>";
                            option3.innerHTML = html3;
                            highinit3 = 3;
                            divs3 = option3.getElementsByTagName("div");
                            add(divs3, highinit3);
                            initTop3 = 0;
                            length3 = arr3.length - 1;
                            maxTop3 = (-35) * length3;
                            up(option3, initTop3);
                        } else {
                            option3.innerHTML = "";
                            arr3 = undefined;
                        }
                    }
                    up(option2, initTop2)
                }
                highlight2 = 0;
            }
            if(targetid === 3) {
                if(highlight3) {
                    initTop3 = initTop3 + Math.round(dy) * 35;
                    if (initTop3 > 0) {
                        initTop3 = 0
                    }
                    if (initTop3 < maxTop3) {
                        initTop3 = maxTop3;
                    }
                    if(highinit3 != highlight3) {
                        highinit3 -= Math.round(dy)
                        if (highinit3 < 3) {
                            highinit3 = 3;
                        }
                        if (highinit3 > 3 + length3) {
                            highinit3 = 3 + length3;
                        }
                        remove(divs3, highlight3 ? highlight3 : highinit3);
                        add(divs3, highinit3);
                    }
                    up(option3, initTop3)
                }
                highlight3 = 0;
            }
        }

        function init() {
            if(hometext.getAttribute('attr-num')) {
                var arr = hometext.getAttribute('attr-num').split('-');
                highinit1 = Number(arr[0])
                highinit2 = Number(arr[1])
                highinit3 = Number(arr[2])
            } else {
                highinit1 = highinit2 = highinit3 = 3;
            }

            arr1 = Object.keys(homeIndex);
            html1 = "<div></div><div></div><div></div>"
            arr1.map(function(data) {
                html1 += "<div>" + data + "</div>";
            })
            html1 += "<div></div><div></div><div></div>"
            option1.innerHTML = html1;
            divs1 = option1.getElementsByTagName("div");
            add(divs1, highinit1);
            initTop1 = (highinit1 - 3) * (-35);
            up(option1, initTop1);

            if(Object.prototype.toString.call(homeIndex[arr1[highinit1 - 3]]) === "[object Object]") {
                arr2 = Object.keys(homeIndex[arr1[highinit1 - 3]]);
                html2 = "<div></div><div></div><div></div>"
                arr2.map(function(data) {
                    html2 += "<div>" + data + "</div>";
                })
                html2 += "<div></div><div></div><div></div>";
                option2.innerHTML = html2;
                divs2 = option2.getElementsByTagName("div");
                add(divs2, highinit2);
                initTop2 = (highinit2 - 3) * (-35);
                length2 = arr2.length - 1;
                maxTop2 = (-35) * length2;
                up(option2, initTop2);

                if(typeof homeIndex[arr1[highinit1 - 3]][arr2[highinit2 - 3]] == "object") {
                    html3 = "<div></div><div></div><div></div>";
                    arr3 = homeIndex[arr1[highinit1 - 3]][arr2[highinit2 - 3]];
                    arr3.map(function(data) {
                        html3 += "<div>" + data + "</div>"
                    })
                    html3 += "<div></div><div></div><div></div>";
                    option3.innerHTML = html3;
                    divs3 = option3.getElementsByTagName("div");
                    add(divs3, highinit3);
                    initTop3 = (highinit3 - 3) * (-35);
                    length3 = arr3.length - 1;
                    maxTop3 = (-35) * length3;
                    up(option3, initTop3);
                } else {
                    option3 = "";
                    arr3 = undefined;
                }
            } else {
                arr2 = homeIndex[arr1[highinit1 - 3]];
                html2 = "<div></div><div></div><div></div>"
                arr2.map(function(data) {
                    html2 += "<div>" + data + "</div>";
                })
                html2 += "<div></div><div></div><div></div>";
                option2.innerHTML = html2;
                highinit2 = 3;
                divs2 = option2.getElementsByTagName("div");
                add(divs2, highinit2);
                initTop2 = 0;
                length2 = arr2.length - 1;
                maxTop2 = (-35) * length2;
                up(option2, initTop2);

                option3.innerHTML = "";
                arr3 = undefined;
            }
        }

        function add(divs, num) {
            divs[num].classList.add('display');
            divs[num - 1].classList.add('display')
            divs[num - 2].classList.add('display')
            divs[num - 3].classList.add('display')
            divs[num + 1].classList.add('display')
            divs[num + 2].classList.add('display')
            divs[num + 3].classList.add('display')
            divs[num - 1].classList.add('side1')
            divs[num - 2].classList.add('side2')
            divs[num - 3].classList.add('side3')
            divs[num + 1].classList.add('side1')
            divs[num + 2].classList.add('side2')
            divs[num + 3].classList.add('side3')
        }
        function remove(divs, num) {
            divs[num].classList.remove('display');
            divs[num - 1].classList.remove('display')
            divs[num - 2].classList.remove('display')
            divs[num - 3].classList.remove('display')
            divs[num + 1].classList.remove('display')
            divs[num + 2].classList.remove('display')
            divs[num + 3].classList.remove('display')
            divs[num - 1].classList.remove('side1')
            divs[num - 2].classList.remove('side2')
            divs[num - 3].classList.remove('side3')
            divs[num + 1].classList.remove('side1')
            divs[num + 2].classList.remove('side2')
            divs[num + 3].classList.remove('side3')
        }
        function up(ele, num) {
            if(!prefix) {
                ele.style.transform = "translate3d(0, " + num + "px, 0)";
            } else {
                ele.style[prefix + "Transform"] = "translate3d(0, " + num + "px, 0)";
            }
        }
        function cancelFun() {
            homeset.classList.add('downele');
            cover.classList.add('disappear');
            homeset.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", homesetFun, false);
            cover.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", coverFun, false);
        }
        function confirmFun() {
            var text, attr;
            var text1 = arr1[highinit1 - 3];
            var text2 = arr2[highinit2 - 3];
            if(arr3) {
                var text3 = arr3[highinit3 - 3];
                text = text1 + "," + text2 + "," + text3
                attr = highinit1 + "-" + highinit2 + "-" + highinit3;
            } else {
                text = text1 + "," + text2;
                attr = highinit1 + "-" + highinit2;
            }
            hometext.textContent = text;
            hometext.setAttribute('attr-num', attr);
            homeset.classList.add('downele');
            cover.classList.add('disappear');
            homeset.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", homesetFun, false);
            cover.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", coverFun, false);
        }
        function homesetFun() {
            homeset.removeEventListener('touchstart', selectInit)
            homeset.removeEventListener('touchmove', selectMove)
            homeset.removeEventListener('touchend', selectEnd)
            cancel.removeEventListener('touchstart', cancelFun)
            confirm.removeEventListener('touchstart', confirmFun)
            homeset.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", homesetFun);
            document.body.removeChild(homeset)
        }
        function coverFun() {
            cover.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", coverFun);
            document.body.removeChild(cover);
        }
    }
    function createDepartment() {
        var html = index["department"];
        document.body.innerHTML += html;
        var extra = document.getElementById("extra")
        var input = extra.getElementsByTagName("input")[0];
        var bottom = extra.getElementsByClassName("bottom")[0];
        var save = extra.getElementsByTagName("button")[0];
        var exp = bottom.getElementsByClassName("exp")[0];
        var exit = extra.getElementsByClassName("exit")[0];
        var departmenttext = document.getElementById("departmenttext");
        if(departmenttext.textContent !== "未填写") {
            input.value = departmenttext.textContent;
            exp.textContent = 30 - input.value.length;
        }
        input.addEventListener('keydown', keydownFun, false);
        input.addEventListener('keyup', keyupFun, false);
        save.addEventListener('touchstart', saveFun, false);
        exit.addEventListener('touchstart', exitFun, false);
        input.focus();
        function keydownFun(e) {
            var num = 30 - input.value.length;
            if(num < 1) {
                if(e.keyCode !== 8) {
                    e.preventDefault();
                }
            }
        }
        function keyupFun(e) {
            var num = 30 - input.value.length;
            if(num === 30) {
                save.setAttribute("disabled", "disabled");
            } else {
                save.removeAttribute("disabled", "disabled");
            }
            exp.textContent = num;
        }
        function saveFun(e) {
            if(!save.getAttribute('disabled')) {
                departmenttext.textContent = input.value;
                extra.classList.add("downele");
                extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
            }
        }
        function exitFun(e) {
            extra.classList.add("downele");
            extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
        }
        function extraFun() {
            input.removeEventListener("keydown", keydownFun);
            input.removeEventListener("keyup", keyupFun);
            save.removeEventListener("touchstart", saveFun);
            exit.removeEventListener("touchstart", exitFun);
            extra.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun);
            document.body.removeChild(extra);
        }
    }
    function createConstellation() {
        var html = index['constellation']
        document.body.innerHTML += html
        var targettext = document.getElementById("constellationtext");
        var set = document.getElementsByClassName("set")[0];
        var cover = document.getElementById("cover");
        var init;
        var select = document.getElementsByClassName("select")[0];
        var option = select.getElementsByClassName('option')[0];
        var highinit;
        var highlight;
        var divs = option.getElementsByTagName('div');
        var length = divs.length;
        var initTop;
        var midTop;
        var dy;
        var maxTop;
        if(targettext.getAttribute('attr-num')) {
            highinit = Number(targettext.getAttribute('attr-num'));
        } else {
            highinit = 1;
        }
        maxTop = (length - 3) * (-80);
        initTop = (highinit - 1) * (-80);
        var now = divs[highinit], pre = divs[highinit - 1], next = divs[highinit + 1];
        var save = document.getElementsByClassName("save")[0];
        var cancel = document.getElementsByClassName("cancel")[0];
        now.classList.add('highlight');
        now.classList.add('display');
        pre.classList.add('display')
        next.classList.add('display')
        up(option, initTop);
        select.addEventListener('touchstart', selectInit, false);
        select.addEventListener('touchmove', selectMove, false);
        select.addEventListener('touchend', selectEnd, false);
        save.addEventListener('touchstart', saveFun, false);
        cancel.addEventListener('touchstart', cancelFun, false);
        function selectInit(e) {
            e.preventDefault();
            init = e.touches[0].screenY;
        }
        function selectMove(e) {
            dy = (e.touches[0].screenY - init) / 60;
            midTop = initTop + dy * 80;
            if(midTop > 0) {
                midTop = 0;
            }
            if(midTop < maxTop) {
                midTop = maxTop;
            }
            highlight = highinit - Math.round(dy);
            if(highlight < 1) {
                highlight = 1;
            }
            if(highlight > length - 2) {
                highlight = length - 2;
            }
            now.classList.remove('highlight')
            now.classList.remove('display')
            pre.classList.remove('display')
            next.classList.remove('display')
            now = divs[highlight];
            pre = divs[highlight - 1];
            next = divs[highlight + 1];
            now.classList.add('highlight')
            now.classList.add('display')
            pre.classList.add('display')
            next.classList.add('display')
            up(option, midTop)
        }
        function selectEnd(e) {
            initTop = initTop + Math.round(dy) * 80;
            if(initTop > 0) {
                initTop = 0
            }
            if(initTop < maxTop) {
                initTop = maxTop;
            }
            highinit -= Math.round(dy)
            if(highinit < 1) {
                highinit = 1;
            }
            if(highinit > length - 2) {
                highinit = length - 2;
            }
            now.classList.remove('highlight')
            now.classList.remove('display')
            pre.classList.remove('display')
            next.classList.remove('display')
            now = divs[highinit];
            pre = divs[highinit - 1];
            next = divs[highinit + 1];
            now.classList.add('highlight')
            now.classList.add('display')
            pre.classList.add('display')
            next.classList.add('display')
            up(option, initTop)
        }
        function saveFun(e) {
            e.preventDefault();
            var value = divs[highinit].textContent.slice(0, 3);
            targettext.textContent = value;
            targettext.setAttribute('attr-num', highinit);
            set.classList.add('disappear')
            set.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun, false);
            cover.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", coverFun, false);
        }
        function cancelFun(e) {
            set.classList.add('disappear')
            set.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun, false);
            cover.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", coverFun, false);
        }
        function setFun() {
            select.removeEventListener('touchstart', selectInit);
            select.removeEventListener('touchmove', selectMove);
            select.removeEventListener('touchend', selectEnd);
            save.removeEventListener('touchstart', saveFun);
            set.removeEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun);
            cover.classList.add('disappear')
            document.body.removeChild(set);
        }
        function coverFun() {
            cover.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", coverFun);
            document.body.removeChild(cover);
        }
    }
    function createGrade() {
        var html = index['grade']
        document.body.innerHTML += html
        var targettext = document.getElementById("gradetext");
        var set = document.getElementsByClassName("set")[0];
        var cover = document.getElementById("cover");
        var init;
        var select = document.getElementsByClassName("select")[0];
        var option = select.getElementsByClassName('option')[0];
        var highinit;
        var highlight;
        var divs = option.getElementsByTagName('div');
        var length = divs.length;
        var initTop;
        var midTop;
        var dy;
        var maxTop;
        if(targettext.getAttribute('attr-num')) {
            highinit = Number(targettext.getAttribute('attr-num'));
        } else {
            highinit = 1;
        }
        maxTop = (length - 3) * (-80);
        initTop = (highinit - 1) * (-80);
        var now = divs[highinit], pre = divs[highinit - 1], next = divs[highinit + 1];
        var save = document.getElementsByClassName("save")[0];
        var cancel = document.getElementsByClassName("cancel")[0];
        now.classList.add('highlight');
        now.classList.add('display');
        pre.classList.add('display')
        next.classList.add('display')
        up(option, initTop);
        select.addEventListener('touchstart', selectInit, false);
        select.addEventListener('touchmove', selectMove, false);
        select.addEventListener('touchend', selectEnd, false);
        save.addEventListener('touchstart', saveFun, false);
        cancel.addEventListener('touchstart', cancelFun, false);
        function selectInit(e) {
            e.preventDefault();
            init = e.touches[0].screenY;
        }
        function selectMove(e) {
            dy = (e.touches[0].screenY - init) / 60;
            midTop = initTop + dy * 80;
            if(midTop > 0) {
                midTop = 0;
            }
            if(midTop < maxTop) {
                midTop = maxTop;
            }
            highlight = highinit - Math.round(dy);
            if(highlight < 1) {
                highlight = 1;
            }
            if(highlight > length - 2) {
                highlight = length - 2;
            }
            now.classList.remove('highlight')
            now.classList.remove('display')
            pre.classList.remove('display')
            next.classList.remove('display')
            now = divs[highlight];
            pre = divs[highlight - 1];
            next = divs[highlight + 1];
            now.classList.add('highlight')
            now.classList.add('display')
            pre.classList.add('display')
            next.classList.add('display')
            up(option, midTop)
        }
        function selectEnd(e) {
            initTop = initTop + Math.round(dy) * 80;
            if(initTop > 0) {
                initTop = 0
            }
            if(initTop < maxTop) {
                initTop = maxTop;
            }
            highinit -= Math.round(dy)
            if(highinit < 1) {
                highinit = 1;
            }
            if(highinit > length - 2) {
                highinit = length - 2;
            }
            now.classList.remove('highlight')
            now.classList.remove('display')
            pre.classList.remove('display')
            next.classList.remove('display')
            now = divs[highinit];
            pre = divs[highinit - 1];
            next = divs[highinit + 1];
            now.classList.add('highlight')
            now.classList.add('display')
            pre.classList.add('display')
            next.classList.add('display')
            up(option, initTop)
        }
        function saveFun(e) {
            e.preventDefault();
            var value = divs[highinit].textContent;
            targettext.textContent = value;
            targettext.setAttribute('attr-num', highinit);
            set.classList.add('disappear')
            set.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun, false);
            cover.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", coverFun, false);
        }
        function cancelFun(e) {
            set.classList.add('disappear')
            set.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun, false);
            cover.addEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", coverFun, false);
        }
        function setFun() {
            select.removeEventListener('touchstart', selectInit);
            select.removeEventListener('touchmove', selectMove);
            select.removeEventListener('touchend', selectEnd);
            save.removeEventListener('touchstart', saveFun);
            set.removeEventListener(prefix ? prefix + 'AnimationEnd' : "animationend", setFun);
            cover.classList.add('disappear')
            document.body.removeChild(set);
        }
        function coverFun() {
            cover.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", coverFun);
            document.body.removeChild(cover);
        }
    }
    function createIntro() {
        var html = index["intro"];
        document.body.innerHTML += html;
        var extra = document.getElementById("extra")
        var textarea = extra.getElementsByTagName("textarea")[0];
        var bottom = extra.getElementsByClassName("bottom")[0];
        var save = extra.getElementsByTagName("button")[0];
        var has = bottom.getElementsByClassName("has")[0];
        var exit = extra.getElementsByClassName("exit")[0];
        var introtext = document.getElementById("introtext");
        if(introtext.textContent !== "未填写") {
            textarea.value = introtext.textContent;
            has.textContent = textarea.value.length;
        }
        textarea.addEventListener('keydown', keydownFun, false);
        textarea.addEventListener('keyup', keyupFun, false);
        save.addEventListener('touchstart', saveFun, false);
        exit.addEventListener('touchstart', exitFun, false);
        textarea.focus();
        function keydownFun(e) {
            var num = textarea.value.length;
            if(num > 50) {
                if(e.keyCode !== 8) {
                    e.preventDefault();
                }
            }
        }
        function keyupFun(e) {
            var num = textarea.value.length;
            if(num === 0) {
                save.setAttribute("disabled", "disabled");
            } else {
                save.removeAttribute("disabled", "disabled");
            }
            has.textContent = num;
        }
        function saveFun(e) {
            if(!save.getAttribute('disabled')) {
                introtext.textContent = textarea.value;
                extra.classList.add("downele");
                extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
            }
        }
        function exitFun(e) {
            extra.classList.add("downele");
            extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
        }
        function extraFun() {
            textarea.removeEventListener("keydown", keydownFun);
            textarea.removeEventListener("keyup", keyupFun);
            save.removeEventListener("touchstart", saveFun);
            exit.removeEventListener("touchstart", exitFun);
            extra.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun);
            document.body.removeChild(extra);
        }
    }
    function createWant() {
        var html = index["want"];
        document.body.innerHTML += html;
        var extra = document.getElementById("extra")
        var textarea = extra.getElementsByTagName("textarea")[0];
        var bottom = extra.getElementsByClassName("bottom")[0];
        var save = extra.getElementsByTagName("button")[0];
        var has = bottom.getElementsByClassName("has")[0];
        var exit = extra.getElementsByClassName("exit")[0];
        var wanttext = document.getElementById("wanttext");
        if(wanttext.textContent !== "未填写") {
            textarea.value = wanttext.textContent;
            has.textContent = textarea.value.length;
        }
        textarea.addEventListener('keydown', keydownFun, false);
        textarea.addEventListener('keyup', keyupFun, false);
        save.addEventListener('touchstart', saveFun, false);
        exit.addEventListener('touchstart', exitFun, false);
        textarea.focus();
        function keydownFun(e) {
            var num = textarea.value.length;
            if(num > 50) {
                if(e.keyCode !== 8) {
                    e.preventDefault();
                }
            }
        }
        function keyupFun(e) {
            var num = textarea.value.length;
            if(num === 0) {
                save.setAttribute("disabled", "disabled");
            } else {
                save.removeAttribute("disabled", "disabled");
            }
            has.textContent = num;
        }
        function saveFun(e) {
            if(!save.getAttribute('disabled')) {
                wanttext.textContent = textarea.value;
                extra.classList.add("downele");
                extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
            }
        }
        function exitFun(e) {
            extra.classList.add("downele");
            extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
        }
        function extraFun() {
            textarea.removeEventListener("keydown", keydownFun);
            textarea.removeEventListener("keyup", keyupFun);
            save.removeEventListener("touchstart", saveFun);
            exit.removeEventListener("touchstart", exitFun);
            extra.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun);
            document.body.removeChild(extra);
        }
    }
    function createPhoto() {
        var html = index["photo"];
        document.body.innerHTML += html;
        var extra = document.getElementById("extra");
        var upload = document.getElementById("upload");
        var exit = extra.getElementsByClassName("exit")[0];
        var photo = document.getElementById("photo");
        var input = upload.getElementsByTagName("input")[0];
        var files;
        var img = document.getElementById("photodisplay").getElementsByTagName("img")[0];
        var save = extra.getElementsByTagName("button")[0]
        if(photo.getAttribute("data-url")) {
            img.setAttribute("src", photo.getAttribute("data-url"));
        }
        input.addEventListener("change", uploadFun, false);
        save.addEventListener("touchstart", saveFun, false);
        exit.addEventListener("touchstart", exitFun, false);
        function uploadFun(e) {
            files = e.target.files;
            if(files[0]) {
                if(files[0].type.indexOf("image") !== -1) {
                    var url = createObjectURL(files[0]);
                    img.setAttribute("src", url);
                    save.removeAttribute('disabled');
                } else {
                    alert("请上传照片")
                }
            }
        }
        function createObjectURL(blob) {
            if(window.URL) {
                return window.URL.createObjectURL(blob);
            } else if(window.webkitURL) {
                return window.webkitURL.createObjectURL(blob);
            } else {
                return null;
            }
        }
        function saveFun(e) {
            if(!save.getAttribute('disabled')) {
                send('/persmod', "POST", files[0], 1, function() {
                    var url = createObjectURL(files[0]);
                    photo.setAttribute("data-url", url);
                    extra.classList.add("downele");
                    extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
                });
            }
        }
        function exitFun(e) {
            extra.classList.add("downele");
            extra.addEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun, false);
        }
        function extraFun() {
            input.removeEventListener("change", uploadFun);
            save.removeEventListener("touchstart", saveFun);
            exit.removeEventListener("touchstart", exitFun);
            extra.removeEventListener(prefix ? prefix + "AnimationEnd" : "animationend", extraFun);
            document.body.removeChild(extra);
        }
    }
    function send(url, type, data, isFile, callback) {
        if(!isFile) {
            var xhr = new XMLHttpRequest();
            xhr.open(type, url, true);
            var str = null;
            if(type === "POST") {
                xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            }
            for(var i in data) {
                if(str) {
                    str = str + "&" + i + "=" + data[i];
                } else {
                    str = i + "=" + data[i];
                }
            }
            xhr.send(str);
            xhr.onreadystatechange = function() {
                if(xhr.readyState === 4) {
                    if((xhr.status >= 200 && xhr.status <= 300) || xhr.status === 304) {
                        if(xhr.responseText == '1') {
                            console.log('success');
                            callback();
                        } else {
                            alert("保存失败");
                        }
                    }
                }
            }
        } else {
            var formdata = new FormData();
            formdata.append("file", data);
            var xhr = new XMLHttpRequest();
            xhr.open(type, url, true);
            xhr.send(formdata);
            xhr.onreadystatechange = function() {
                if(xhr.readyState === 4) {
                    if((xhr.status >= 200 && xhr.status <= 300) || xhr.status === 304) {
                        if(xhr.responseText == '1') {
                            console.log('success');
                            callback();
                        } else {
                            alert("保存失败");
                        }
                    }
                }
            }
        }
    }
</script>
</html>